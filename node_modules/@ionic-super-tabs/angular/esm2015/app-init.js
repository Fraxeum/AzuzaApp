import * as tslib_1 from "tslib";
import { applyPolyfills, defineCustomElements } from '@ionic-super-tabs/core/loader';
let didInitialize = false;
export function appInit(doc, zone) {
    return function () {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            console.log('init');
            const win = doc.defaultView;
            console.log('Initializing');
            if (!win || didInitialize) {
                return;
            }
            didInitialize = true;
            const aelFn = '__zone_symbol__addEventListener' in doc.body
                ? '__zone_symbol__addEventListener'
                : 'addEventListener';
            yield applyPolyfills();
            yield defineCustomElements(win, {
                syncQueue: true,
                raf,
                jmp: (h) => zone.runOutsideAngular(h),
                ael(elm, eventName, cb, opts) {
                    elm[aelFn](eventName, cb, opts);
                },
                rel(elm, eventName, cb, opts) {
                    elm.removeEventListener(eventName, cb, opts);
                },
            });
        });
    };
}
;
export const raf = (h) => {
    if (typeof __zone_symbol__requestAnimationFrame === 'function') {
        return __zone_symbol__requestAnimationFrame(h);
    }
    if (typeof requestAnimationFrame === 'function') {
        return requestAnimationFrame(h);
    }
    return setTimeout(h);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLWluaXQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AaW9uaWMtc3VwZXItdGFicy9hbmd1bGFyLyIsInNvdXJjZXMiOlsiYXBwLWluaXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLE9BQU8sRUFBRSxjQUFjLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUdyRixJQUFJLGFBQWEsR0FBRyxLQUFLLENBQUM7QUFFMUIsTUFBTSxVQUFVLE9BQU8sQ0FBQyxHQUFhLEVBQUUsSUFBWTtJQUNqRCxPQUFPOztZQUNMLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7WUFFcEIsTUFBTSxHQUFHLEdBQVEsR0FBRyxDQUFDLFdBQWtCLENBQUM7WUFFeEMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsQ0FBQztZQUU1QixJQUFJLENBQUMsR0FBRyxJQUFJLGFBQWEsRUFBRTtnQkFDekIsT0FBTzthQUNSO1lBRUQsYUFBYSxHQUFHLElBQUksQ0FBQztZQUVyQixNQUFNLEtBQUssR0FBRyxpQ0FBaUMsSUFBSyxHQUFHLENBQUMsSUFBWTtnQkFDbEUsQ0FBQyxDQUFDLGlDQUFpQztnQkFDbkMsQ0FBQyxDQUFDLGtCQUFrQixDQUFDO1lBR3ZCLE1BQU0sY0FBYyxFQUFFLENBQUM7WUFFdkIsTUFBTSxvQkFBb0IsQ0FBQyxHQUFHLEVBQUU7Z0JBQzlCLFNBQVMsRUFBRSxJQUFJO2dCQUNmLEdBQUc7Z0JBQ0gsR0FBRyxFQUFFLENBQUMsQ0FBTSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxDQUFDO2dCQUMxQyxHQUFHLENBQUMsR0FBRyxFQUFFLFNBQVMsRUFBRSxFQUFFLEVBQUUsSUFBSTtvQkFDekIsR0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDLFNBQVMsRUFBRSxFQUFFLEVBQUUsSUFBSSxDQUFDLENBQUM7Z0JBQzNDLENBQUM7Z0JBQ0QsR0FBRyxDQUFDLEdBQUcsRUFBRSxTQUFTLEVBQUUsRUFBRSxFQUFFLElBQUk7b0JBQzFCLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBQyxTQUFTLEVBQUUsRUFBRSxFQUFFLElBQUksQ0FBQyxDQUFDO2dCQUMvQyxDQUFDO2FBQ0YsQ0FBQyxDQUFDO1FBQ0wsQ0FBQztLQUFBLENBQUM7QUFDSixDQUFDO0FBQUEsQ0FBQztBQUtGLE1BQU0sQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDLENBQU0sRUFBRSxFQUFFO0lBQzVCLElBQUksT0FBTyxvQ0FBb0MsS0FBSyxVQUFVLEVBQUU7UUFDOUQsT0FBTyxvQ0FBb0MsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUNoRDtJQUNELElBQUksT0FBTyxxQkFBcUIsS0FBSyxVQUFVLEVBQUU7UUFDL0MsT0FBTyxxQkFBcUIsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUNqQztJQUNELE9BQU8sVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3ZCLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nWm9uZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgYXBwbHlQb2x5ZmlsbHMsIGRlZmluZUN1c3RvbUVsZW1lbnRzIH0gZnJvbSAnQGlvbmljLXN1cGVyLXRhYnMvY29yZS9sb2FkZXInO1xuXG5cbmxldCBkaWRJbml0aWFsaXplID0gZmFsc2U7XG5cbmV4cG9ydCBmdW5jdGlvbiBhcHBJbml0KGRvYzogRG9jdW1lbnQsIHpvbmU6IE5nWm9uZSkge1xuICByZXR1cm4gYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgIGNvbnNvbGUubG9nKCdpbml0Jyk7XG5cbiAgICBjb25zdCB3aW46IGFueSA9IGRvYy5kZWZhdWx0VmlldyBhcyBhbnk7XG5cbiAgICBjb25zb2xlLmxvZygnSW5pdGlhbGl6aW5nJyk7XG5cbiAgICBpZiAoIXdpbiB8fCBkaWRJbml0aWFsaXplKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgZGlkSW5pdGlhbGl6ZSA9IHRydWU7XG5cbiAgICBjb25zdCBhZWxGbiA9ICdfX3pvbmVfc3ltYm9sX19hZGRFdmVudExpc3RlbmVyJyBpbiAoZG9jLmJvZHkgYXMgYW55KVxuICAgICAgPyAnX196b25lX3N5bWJvbF9fYWRkRXZlbnRMaXN0ZW5lcidcbiAgICAgIDogJ2FkZEV2ZW50TGlzdGVuZXInO1xuXG5cbiAgICBhd2FpdCBhcHBseVBvbHlmaWxscygpO1xuXG4gICAgYXdhaXQgZGVmaW5lQ3VzdG9tRWxlbWVudHMod2luLCB7XG4gICAgICBzeW5jUXVldWU6IHRydWUsXG4gICAgICByYWYsXG4gICAgICBqbXA6IChoOiBhbnkpID0+IHpvbmUucnVuT3V0c2lkZUFuZ3VsYXIoaCksXG4gICAgICBhZWwoZWxtLCBldmVudE5hbWUsIGNiLCBvcHRzKSB7XG4gICAgICAgIChlbG0gYXMgYW55KVthZWxGbl0oZXZlbnROYW1lLCBjYiwgb3B0cyk7XG4gICAgICB9LFxuICAgICAgcmVsKGVsbSwgZXZlbnROYW1lLCBjYiwgb3B0cykge1xuICAgICAgICBlbG0ucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudE5hbWUsIGNiLCBvcHRzKTtcbiAgICAgIH0sXG4gICAgfSk7XG4gIH07XG59O1xuXG5kZWNsYXJlIGNvbnN0IF9fem9uZV9zeW1ib2xfX3JlcXVlc3RBbmltYXRpb25GcmFtZTogYW55O1xuZGVjbGFyZSBjb25zdCByZXF1ZXN0QW5pbWF0aW9uRnJhbWU6IGFueTtcblxuZXhwb3J0IGNvbnN0IHJhZiA9IChoOiBhbnkpID0+IHtcbiAgaWYgKHR5cGVvZiBfX3pvbmVfc3ltYm9sX19yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gX196b25lX3N5bWJvbF9fcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGgpO1xuICB9XG4gIGlmICh0eXBlb2YgcmVxdWVzdEFuaW1hdGlvbkZyYW1lID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIHJlcXVlc3RBbmltYXRpb25GcmFtZShoKTtcbiAgfVxuICByZXR1cm4gc2V0VGltZW91dChoKTtcbn07XG4iXX0=