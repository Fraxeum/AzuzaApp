{"version":3,"sources":["../../src/pages/confirmpage/confirmpage.module.ts","../../node_modules/@ionic-native/core/index.js","../../node_modules/@ionic-native/core/util.js","../../node_modules/@ionic-native/core/plugin.js","../../node_modules/rxjs/observable/fromEvent.js","../../node_modules/rxjs-compat/observable/fromEvent.js","../../node_modules/@ionic-native/core/bootstrap.js","../../node_modules/@ionic-native/core/decorators.js","../../node_modules/rxjs/observable/throw.js","../../node_modules/rxjs-compat/observable/throw.js","../../node_modules/@ionic-native/core/ionic-native-plugin.js","../../node_modules/@ionic-native/transfer/index.js","../../node_modules/@ionic-native/file-path/index.js","../../node_modules/@ionic-native/camera/index.js","../../node_modules/@ionic-native/file/index.js","../../src/pages/confirmpage/confirmpage.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACO;AACJ;AACW;AAEZ;AAED;AACQ;AACC;AACL;AA+B9C;IAAA;IAA6B,CAAC;IAAjB,aAAa;QArBzB,+DAAQ,CAAC;YACT,YAAY,EAAE;gBACb,iEAAW;aAEX;YACD,OAAO,EAAE;gBACR,8DAAe,CAAC,QAAQ,CAAC,iEAAW,CAAC,EAAE,iEAAU;aACjD;YACD,OAAO,EAAE;gBACR,iEAAW;aAGX;YACD,SAAS,EAAC;gBACT,0EAAY;gBACZ,gEAAI;gBACJ,wEAAQ;gBACR,oEAAM;gBACN,yEAAQ;aAAG;SACZ,CAAC;OAEW,aAAa,CAAI;IAAD,oBAAC;CAAA;AAAJ;;;;;;;;;ACzC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyB;AACI;AACN;AACe;AACtC,iC;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACO;AACP;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;AC7EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACS;AACb;AAC+B;AACxE,sEAAU;AACV;AACA;AACO,iCAAiC;AACjC,gCAAgC;AAChC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gEAAS;AAC9B;AACA;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA,QAAQ,iEAAU;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA;AACA,6BAA6B,gEAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,WAAW;AACrC;AACA,YAAY,iEAAU;AACtB;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA,aAAa;AACb;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,6BAA6B,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA,0BAA0B,WAAW;AACrC,WAAW,iEAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4BAA4B;AAChD;AACA,KAAK;AACL;AACA;AACA,0BAA0B,WAAW;AACrC,eAAe,2DAAU;AACzB;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA,aAAa;AACb;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACO;AACP,6BAA6B,kBAAkB;AAC/C,WAAW,4EAAS;AACpB;AACA;AACA;AACA,kEAAkE,MAAM;AACxE;AACA;AACA;AACA;AACA;AACO;AACP,0BAA0B,WAAW;AACrC,eAAe,2DAAU;AACzB;AACA;AACA,mCAAmC,gEAAS;AAC5C;AACA,gCAAgC,qDAAqD,EAAE,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACO;AACP,0BAA0B,WAAW;AACrC;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,0BAA0B,WAAW;AACrC;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,2DAAU;AACjC;AACA;AACA;AACA;AACA,wCAAwC,uBAAuB;AAC/D;AACA;AACA;AACA,qBAAqB;AACrB;AACA,wCAAwC,uBAAuB;AAC/D;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,mBAAmB,iEAAU;AAC7B;AACA;AACA;AACA;AACA,wCAAwC,uBAAuB;AAC/D;AACA;AACA;AACA,qBAAqB;AACrB;AACA,wCAAwC,uBAAuB;AAC/D;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,oBAAoB,iEAAU;AAC9B;AACA;AACA;AACA,wCAAwC,uBAAuB;AAC/D;AACA;AACA;AACA,qBAAqB;AACrB;AACA,wCAAwC,uBAAuB;AAC/D;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qCAAqC,EAAE;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;AC7Ya;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,GAAkC;AACnD,qC;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,CAAM;AAC3B;AACA,qC;;;;;;;;ACJA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,qC;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACE;AAC0D;AAC1D;AAC/C;AACA;AACA;AACO;AACP,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA,oBAAoB,6EAAoB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,2DAAU,cAAc,EAAE;AAC7D;AACA,2BAA2B,iEAAU,cAAc,EAAE;AACrD;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA,4BAA4B,0EAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,qEAAM;AACrC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gEAAS;AAC9B;AACA;AACA,mBAAmB,gEAAS;AAC5B;AACA;AACA,mBAAmB,0EAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA,uBAAuB,6DAAI;AAC3B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA,uBAAuB,qEAAY;AACnC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,gBAAgB,0EAAiB;AACjC,uBAAuB,gEAAS;AAChC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,gBAAgB,0EAAiB;AACjC,gBAAgB,gEAAS;AACzB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA,uBAAuB,yEAAgB;AACvC,aAAa;AACb;AACA;AACA;AACA;AACA,sC;;;;;;;;AC3Na;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,GAA8B;AAC/C,iC;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,CAAM;AAC3B;AACA,iC;;;;;;;;ACJA;AAAA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC4B;AAC7B,+C;;;;;;;;AC/EA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AAC2C;AACuE;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,8CAA8C;AACzD,WAAW,OAAO;AAClB;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,6EAAiB;AACnB;AACA,KAAK,OAAO,yDAAU,EAAE;AACxB;AACA;AACA,uCAAuC,WAAW;AAClD;AACA,IAAI,0EAAM;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACoB;AACpB;AACA;AACA;AACA;AACA;AACA,YAAY,qFAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,kBAAkB;AACjC,eAAe,QAAQ;AACvB,iBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB,eAAe,OAAO;AACtB,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,SAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA,CAAC;AACD;AACA,IAAI,mFAAe;AACnB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,mFAAe;AACnB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,iFAAa,EAAE,aAAa;AAChC;AACA;AACA;AACA;AACA;AACA,IAAI,mFAAe;AACnB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,0EAAM;AACV;AACA;AACA,KAAK;AACL;AACA;AAC0B;AAC1B,iC;;;;;;;;AC3NA;AAAA;AAAA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AAC2C;AAC6B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,yDAAU,EAAE;AAC5B;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,0EAAM;AACd;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC,CAAC,6EAAiB;AACC;AACpB,iC;;;;;;;;ACzGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AAC2C;AAC6B;AACjE;AACP;AACA;AACA;AACA;AACA,CAAC,0CAA0C;AACpC;AACP;AACA;AACA;AACA,CAAC,oCAAoC;AAC9B;AACP;AACA;AACA;AACA;AACA,CAAC,8BAA8B;AACxB;AACP;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AACxC;AACP;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sDAAsD;AAChD;AACP;AACA;AACA;AACA,CAAC,8BAA8B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA,iBAAiB,cAAc;AAC/B,mBAAmB,aAAa;AAChC;AACA;AACA;AACA,iBAAiB,cAAc;AAC/B,mBAAmB,aAAa;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,yDAAU,EAAE;AAC5B;AACA;AACA,QAAQ,2EAAO;AACf;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wBAAwB;AACvC;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,0EAAM;AACd;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC,CAAC,6EAAiB;AACD;AAClB,iC;;;;;;;;ACrRA;AAAA;AAAA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AAC2C;AACmD;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,iBAAiB,QAAQ;AACzB,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,iBAAiB,QAAQ;AACzB,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB;AACrE,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,8BAA8B;AAC/C;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB;AACrE,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB;AACrE,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB;AACrE,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,iBAAiB,QAAQ;AACzB,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,iBAAiB,QAAQ;AACzB,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,gBAAgB;AACjE,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,4BAA4B;AAC3C,eAAe,cAAc;AAC7B,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,iBAAiB,4BAA4B;AAC7C,iBAAiB,cAAc;AAC/B,mBAAmB,aAAa;AAChC;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,iBAAiB,4BAA4B;AAC7C,iBAAiB,cAAc;AAC/B,mBAAmB,aAAa;AAChC;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB,eAAe,cAAc;AAC7B,eAAe,cAAc;AAC7B,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA,iBAAiB,UAAU;AAC3B,iBAAiB,cAAc;AAC/B,iBAAiB,cAAc;AAC/B,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA,iBAAiB,UAAU;AAC3B,iBAAiB,cAAc;AAC/B,iBAAiB,cAAc;AAC/B,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,+BAA+B,WAAW,EAAE;AAC5C;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,cAAc;AAC7B,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,iBAAiB,cAAc;AAC/B,mBAAmB,cAAc;AACjC;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,iBAAiB,cAAc;AAC/B,mBAAmB,cAAc;AACjC;AACA;AACA,qDAAqD,gBAAgB;AACrE;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,gBAAgB;AACxE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,8CAA8C;AAC9E;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,gBAAgB;AACjE,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,gBAAgB;AACjE,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B,iBAAiB;AACjB;AACA;AACA;AACA,yBAAyB,OAAO;AAChC,mBAAmB;AACnB;AACA;AACA;AACA,yBAAyB,OAAO;AAChC,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,4BAA4B,OAAO;AACnC,iBAAiB;AACjB;AACA;AACA;AACA,8BAA8B,OAAO;AACrC,mBAAmB;AACnB;AACA;AACA;AACA,8BAA8B,OAAO;AACrC,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,8BAA8B,eAAe;AAC7C,6BAA6B,OAAO;AACpC,qBAAqB,MAAM;AAC3B,iBAAiB;AACjB;AACA;AACA;AACA,gCAAgC,eAAe;AAC/C,+BAA+B,OAAO;AACtC,uBAAuB,MAAM;AAC7B,mBAAmB;AACnB;AACA;AACA;AACA,gCAAgC,eAAe;AAC/C,+BAA+B,OAAO;AACtC,uBAAuB,MAAM;AAC7B,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,8BAA8B,eAAe;AAC7C,wBAAwB,OAAO;AAC/B,qBAAqB,MAAM;AAC3B,iBAAiB;AACjB;AACA;AACA;AACA,gCAAgC,eAAe;AAC/C,0BAA0B,OAAO;AACjC,uBAAuB,MAAM;AAC7B,mBAAmB;AACnB;AACA;AACA;AACA,gCAAgC,eAAe;AAC/C,0BAA0B,OAAO;AACjC,uBAAuB,MAAM;AAC7B,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iCAAiC;AAC1D,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iCAAiC;AAC1D,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS,OAAO,yDAAU,EAAE;AAC5B;AACA;AACA,QAAQ,2EAAe;AACvB;AACA;AACA;AACA,QAAQ,2EAAe;AACvB;AACA;AACA;AACA,QAAQ,2EAAe;AACvB;AACA;AACA;AACA,QAAQ,2EAAe;AACvB;AACA;AACA;AACA,QAAQ,2EAAe;AACvB;AACA;AACA;AACA,QAAQ,2EAAe;AACvB;AACA;AACA;AACA,QAAQ,2EAAe;AACvB;AACA;AACA;AACA,QAAQ,2EAAe;AACvB;AACA;AACA;AACA,QAAQ,2EAAe;AACvB;AACA;AACA;AACA,QAAQ,2EAAe;AACvB;AACA;AACA;AACA,QAAQ,2EAAe;AACvB;AACA;AACA;AACA,QAAQ,2EAAe;AACvB;AACA;AACA;AACA,QAAQ,gFAAY;AACpB;AACA;AACA;AACA;AACA;AACA,QAAQ,gFAAY;AACpB;AACA;AACA;AACA;AACA;AACA,QAAQ,gFAAY;AACpB;AACA;AACA;AACA;AACA;AACA,QAAQ,gFAAY;AACpB;AACA;AACA;AACA;AACA;AACA,QAAQ,gFAAY;AACpB;AACA;AACA;AACA;AACA;AACA,QAAQ,gFAAY;AACpB;AACA;AACA;AACA;AACA;AACA,QAAQ,gFAAY;AACpB;AACA;AACA;AACA;AACA;AACA,QAAQ,gFAAY;AACpB;AACA;AACA;AACA;AACA;AACA,QAAQ,gFAAY;AACpB;AACA;AACA;AACA;AACA;AACA,QAAQ,gFAAY;AACpB;AACA;AACA;AACA;AACA;AACA,QAAQ,gFAAY;AACpB;AACA;AACA;AACA;AACA;AACA,QAAQ,gFAAY;AACpB;AACA;AACA;AACA;AACA;AACA,QAAQ,gFAAY;AACpB;AACA;AACA;AACA;AACA;AACA,QAAQ,gFAAY;AACpB;AACA;AACA;AACA;AACA;AACA,QAAQ,gFAAY;AACpB;AACA;AACA;AACA;AACA;AACA,QAAQ,gFAAY;AACpB;AACA;AACA;AACA;AACA;AACA,QAAQ,gFAAY;AACpB;AACA;AACA;AACA;AACA;AACA,QAAQ,gFAAY;AACpB;AACA;AACA;AACA;AACA;AACA,QAAQ,gFAAY;AACpB;AACA;AACA;AACA;AACA;AACA,QAAQ,gFAAY;AACpB;AACA;AACA;AACA;AACA;AACA,QAAQ,gFAAY;AACpB;AACA;AACA;AACA;AACA;AACA,QAAQ,gFAAY;AACpB;AACA;AACA;AACA;AACA;AACA,QAAQ,gFAAY;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,0EAAM;AACd;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC,CAAC,6EAAiB;AACH;AAChB,iC;;;;;;;;;;;;;;;;;;;;;AC31C0C;AACsJ;AACvI;AAezD;IAKE,qBAAmB,OAAsB,EAAS,MAAgB,EAAS,IAAkB,EAAS,SAA0B,EAAS,KAAsB;QAA5I,YAAO,GAAP,OAAO,CAAe;QAAS,WAAM,GAAN,MAAM,CAAU;QAAS,SAAI,GAAJ,IAAI,CAAc;QAAS,cAAS,GAAT,SAAS,CAAiB;QAAS,UAAK,GAAL,KAAK,CAAiB;QAC7J,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAEpC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;QACjC,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAE3C,CAAC;IAGD,2BAAK,GAAL;QAAA,iBAiDC;QAhDC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,SAAS,CAChC,cAAI;YACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YAC7C,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACpC,EAAE,EAAC,KAAK,CAAC,OAAO,CAAC,EAAC;gBAEhB,IAAI,KAAK,GAAG,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC;oBAC5B,OAAO,EAAE,6GAA6G;oBACtH,QAAQ,EAAE,IAAI;oBACd,QAAQ,EAAE,KAAK;iBAChB,CAAC,CAAC;gBAEH,KAAK,CAAC,YAAY,CAAC;oBACjB,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;oBAC/B,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;gBAGvC,CAAC,CAAC,CAAC;gBAEH,KAAK,CAAC,OAAO,EAAE,CAAC;YAKlB,CAAC;YACD,IAAI,EAAC;gBACH,IAAI,KAAK,GAAG,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC;oBAC5B,OAAO,EAAE,iFAAiF;oBAC1F,QAAQ,EAAE,IAAI;oBACd,QAAQ,EAAE,KAAK;iBAChB,CAAC,CAAC;gBAEH,KAAK,CAAC,YAAY,CAAC;oBACjB,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;gBAIjC,CAAC,CAAC,CAAC;YAEL,CAAC;QACH,CAAC,EAAC,eAAK;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACxB,UAAU,CAAC;gBACR,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;YAC5C,CAAC,EAAE,IAAI,CAAC,CAAC;QACZ,CAAC,CACC;IACH,CAAC;IAhEU,WAAW;QALvB,gEAAS,CAAC;YACT,QAAQ,EAAE,cAAc;WACO;SAChC,CAAC;oBAO+J;OALpJ,WAAW,CAoEvB;IAAD,CAAC;AAAA;SApEY,WAAW,mB","file":"7.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ConfirmPage } from './confirmpage';\nimport {UserProvider} from '../../providers/user/user';\nimport { HttpClient, HttpHeaders, HttpClientModule } from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\n \nimport { File } from '@ionic-native/file';\nimport { Transfer } from '@ionic-native/transfer';\nimport { FilePath } from '@ionic-native/file-path';\nimport { Camera } from '@ionic-native/camera';\n\n\n\n\n\n\n\n\n\n@NgModule({\n\tdeclarations: [\n\t\tConfirmPage,\n\t\t\n\t],\n\timports: [\n\t\tIonicPageModule.forChild(ConfirmPage), HttpModule\n\t],\n\texports: [\n\t\tConfirmPage,\n\t\t\n\t\n\t],\n\tproviders:[\n\t\tUserProvider, \n\t\tFile,\n\t\tTransfer,\n\t\tCamera,\n\t\tFilePath, ]\n})\n\nexport class ConfirmModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/confirmpage/confirmpage.module.ts","export * from './plugin';\nexport * from './decorators';\nexport * from './util';\nexport * from './ionic-native-plugin';\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/core/index.js\n// module id = 911\n// module chunks = 0 1 2 3 4 5 6 7 11 12","/**\n * @private\n */\nexport var get = function (element, path) {\n    var paths = path.split('.');\n    var obj = element;\n    for (var i = 0; i < paths.length; i++) {\n        if (!obj) {\n            return null;\n        }\n        obj = obj[paths[i]];\n    }\n    return obj;\n};\n/**\n * @private\n */\nexport var getPromise = function (callback) {\n    var tryNativePromise = function () {\n        if (window.Promise) {\n            return new Promise(function (resolve, reject) {\n                callback(resolve, reject);\n            });\n        }\n        else {\n            console.error('No Promise support or polyfill found. To enable Ionic Native support, please add the es6-promise polyfill before this script, or run with a library like Angular or on a recent browser.');\n        }\n    };\n    return tryNativePromise();\n};\n/**\n * @private\n * @param pluginRef\n * @returns {null|*}\n */\nexport var getPlugin = function (pluginRef) {\n    return get(window, pluginRef);\n};\n/**\n * @private\n */\nexport var pluginWarn = function (pluginName, plugin, method) {\n    if (method) {\n        console.warn('Ionic Native: tried calling ' +\n            pluginName +\n            '.' +\n            method +\n            ', but the ' +\n            pluginName +\n            ' plugin is not installed.');\n    }\n    else {\n        console.warn(\"'Ionic Native: tried accessing the \" + pluginName + \" plugin but it's not installed.\");\n    }\n    if (plugin) {\n        console.warn(\"Install the \" + pluginName + \" plugin: 'ionic cordova plugin add \" + plugin + \"'\");\n    }\n};\n/**\n * @private\n * @param pluginName\n * @param method\n */\nexport var cordovaWarn = function (pluginName, method) {\n    if (method) {\n        console.warn('Ionic Native: tried calling ' +\n            pluginName +\n            '.' +\n            method +\n            ', but Cordova is not available. Make sure to a) run in a real device or simulator and b) include cordova.js in your index.html');\n    }\n    else {\n        console.warn('Native: tried accessing the ' +\n            pluginName +\n            ' plugin but Cordova is not available. Make sure to a) run in a real device or simulator and b) include cordova.js in your index.html');\n    }\n};\n//# sourceMappingURL=util.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/core/util.js\n// module id = 912\n// module chunks = 0 1 2 3 4 5 6 7 11 12","import { Observable } from 'rxjs/Observable';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { checkReady } from './bootstrap';\nimport { cordovaWarn, getPlugin, getPromise, pluginWarn } from './util';\ncheckReady();\n// declare const window;\n// declare var Promise;\nexport var ERR_CORDOVA_NOT_AVAILABLE = { error: 'cordova_not_available' };\nexport var ERR_PLUGIN_NOT_INSTALLED = { error: 'plugin_not_installed' };\nexport function checkAvailability(plugin, methodName, pluginName) {\n    var pluginRef, pluginInstance, pluginPackage;\n    if (typeof plugin === 'string') {\n        pluginRef = plugin;\n    }\n    else {\n        pluginRef = plugin.constructor.getPluginRef();\n        pluginName = plugin.constructor.getPluginName();\n        pluginPackage = plugin.constructor.getPluginInstallName();\n    }\n    pluginInstance = getPlugin(pluginRef);\n    if (!pluginInstance ||\n        (!!methodName && typeof pluginInstance[methodName] === 'undefined')) {\n        if (!window.cordova) {\n            cordovaWarn(pluginName, methodName);\n            return ERR_CORDOVA_NOT_AVAILABLE;\n        }\n        pluginWarn(pluginName, pluginPackage, methodName);\n        return ERR_PLUGIN_NOT_INSTALLED;\n    }\n    return true;\n}\n/**\n * Checks if _objectInstance exists and has the method/property\n * @private\n */\nexport function instanceAvailability(pluginObj, methodName) {\n    return (pluginObj._objectInstance &&\n        (!methodName ||\n            typeof pluginObj._objectInstance[methodName] !== 'undefined'));\n}\nfunction setIndex(args, opts, resolve, reject) {\n    if (opts === void 0) { opts = {}; }\n    // ignore resolve and reject in case sync\n    if (opts.sync) {\n        return args;\n    }\n    // If the plugin method expects myMethod(success, err, options)\n    if (opts.callbackOrder === 'reverse') {\n        // Get those arguments in the order [resolve, reject, ...restOfArgs]\n        args.unshift(reject);\n        args.unshift(resolve);\n    }\n    else if (opts.callbackStyle === 'node') {\n        args.push(function (err, result) {\n            if (err) {\n                reject(err);\n            }\n            else {\n                resolve(result);\n            }\n        });\n    }\n    else if (opts.callbackStyle === 'object' &&\n        opts.successName &&\n        opts.errorName) {\n        var obj = {};\n        obj[opts.successName] = resolve;\n        obj[opts.errorName] = reject;\n        args.push(obj);\n    }\n    else if (typeof opts.successIndex !== 'undefined' ||\n        typeof opts.errorIndex !== 'undefined') {\n        var setSuccessIndex = function () {\n            // If we've specified a success/error index\n            if (opts.successIndex > args.length) {\n                args[opts.successIndex] = resolve;\n            }\n            else {\n                args.splice(opts.successIndex, 0, resolve);\n            }\n        };\n        var setErrorIndex = function () {\n            // We don't want that the reject cb gets spliced into the position of an optional argument that has not been defined and thus causing non expected behaviour.\n            if (opts.errorIndex > args.length) {\n                args[opts.errorIndex] = reject; // insert the reject fn at the correct specific index\n            }\n            else {\n                args.splice(opts.errorIndex, 0, reject); // otherwise just splice it into the array\n            }\n        };\n        if (opts.successIndex > opts.errorIndex) {\n            setErrorIndex();\n            setSuccessIndex();\n        }\n        else {\n            setSuccessIndex();\n            setErrorIndex();\n        }\n    }\n    else {\n        // Otherwise, let's tack them on to the end of the argument list\n        // which is 90% of cases\n        args.push(resolve);\n        args.push(reject);\n    }\n    return args;\n}\nfunction callCordovaPlugin(pluginObj, methodName, args, opts, resolve, reject) {\n    if (opts === void 0) { opts = {}; }\n    // Try to figure out where the success/error callbacks need to be bound\n    // to our promise resolve/reject handlers.\n    args = setIndex(args, opts, resolve, reject);\n    var availabilityCheck = checkAvailability(pluginObj, methodName);\n    if (availabilityCheck === true) {\n        var pluginInstance = getPlugin(pluginObj.constructor.getPluginRef());\n        return pluginInstance[methodName].apply(pluginInstance, args);\n    }\n    else {\n        return availabilityCheck;\n    }\n}\nfunction wrapPromise(pluginObj, methodName, args, opts) {\n    if (opts === void 0) { opts = {}; }\n    var pluginResult, rej;\n    var p = getPromise(function (resolve, reject) {\n        if (opts.destruct) {\n            pluginResult = callCordovaPlugin(pluginObj, methodName, args, opts, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return resolve(args);\n            }, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return reject(args);\n            });\n        }\n        else {\n            pluginResult = callCordovaPlugin(pluginObj, methodName, args, opts, resolve, reject);\n        }\n        rej = reject;\n    });\n    // Angular throws an error on unhandled rejection, but in this case we have already printed\n    // a warning that Cordova is undefined or the plugin is uninstalled, so there is no reason\n    // to error\n    if (pluginResult && pluginResult.error) {\n        p.catch(function () { });\n        typeof rej === 'function' && rej(pluginResult.error);\n    }\n    return p;\n}\nfunction wrapOtherPromise(pluginObj, methodName, args, opts) {\n    if (opts === void 0) { opts = {}; }\n    return getPromise(function (resolve, reject) {\n        var pluginResult = callCordovaPlugin(pluginObj, methodName, args, opts);\n        if (pluginResult) {\n            if (pluginResult.error) {\n                reject(pluginResult.error);\n            }\n            else if (pluginResult.then) {\n                pluginResult.then(resolve).catch(reject);\n            }\n        }\n        else {\n            reject({ error: 'unexpected_error' });\n        }\n    });\n}\nfunction wrapObservable(pluginObj, methodName, args, opts) {\n    if (opts === void 0) { opts = {}; }\n    return new Observable(function (observer) {\n        var pluginResult;\n        if (opts.destruct) {\n            pluginResult = callCordovaPlugin(pluginObj, methodName, args, opts, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return observer.next(args);\n            }, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return observer.error(args);\n            });\n        }\n        else {\n            pluginResult = callCordovaPlugin(pluginObj, methodName, args, opts, observer.next.bind(observer), observer.error.bind(observer));\n        }\n        if (pluginResult && pluginResult.error) {\n            observer.error(pluginResult.error);\n            observer.complete();\n        }\n        return function () {\n            try {\n                if (opts.clearFunction) {\n                    if (opts.clearWithArgs) {\n                        return callCordovaPlugin(pluginObj, opts.clearFunction, args, opts, observer.next.bind(observer), observer.error.bind(observer));\n                    }\n                    return callCordovaPlugin(pluginObj, opts.clearFunction, []);\n                }\n            }\n            catch (e) {\n                console.warn('Unable to clear the previous observable watch for', pluginObj.constructor.getPluginName(), methodName);\n                console.warn(e);\n            }\n        };\n    });\n}\nfunction callInstance(pluginObj, methodName, args, opts, resolve, reject) {\n    if (opts === void 0) { opts = {}; }\n    args = setIndex(args, opts, resolve, reject);\n    if (instanceAvailability(pluginObj, methodName)) {\n        return pluginObj._objectInstance[methodName].apply(pluginObj._objectInstance, args);\n    }\n}\n/**\n * Wrap the event with an observable\n * @private\n * @param event even name\n * @param element The element to attach the event listener to\n * @returns {Observable}\n */\nexport function wrapEventObservable(event, element) {\n    if (element === void 0) { element = window; }\n    return fromEvent(element, event);\n}\n/**\n * Certain plugins expect the user to override methods in the plugin. For example,\n * window.cordova.plugins.backgroundMode.onactivate = function() { ... }.\n *\n * Unfortunately, this is brittle and would be better wrapped as an Observable. overrideFunction\n * does just this.\n * @private\n */\nexport function overrideFunction(pluginObj, methodName, args, opts) {\n    if (opts === void 0) { opts = {}; }\n    return new Observable(function (observer) {\n        var availabilityCheck = checkAvailability(pluginObj, null, pluginObj.constructor.getPluginName());\n        if (availabilityCheck === true) {\n            var pluginInstance_1 = getPlugin(pluginObj.constructor.getPluginRef());\n            pluginInstance_1[methodName] = observer.next.bind(observer);\n            return function () { return (pluginInstance_1[methodName] = function () { }); };\n        }\n        else {\n            observer.error(availabilityCheck);\n            observer.complete();\n        }\n    });\n}\n/**\n * @private\n */\nexport var wrap = function (pluginObj, methodName, opts) {\n    if (opts === void 0) { opts = {}; }\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (opts.sync) {\n            // Sync doesn't wrap the plugin with a promise or observable, it returns the result as-is\n            return callCordovaPlugin(pluginObj, methodName, args, opts);\n        }\n        else if (opts.observable) {\n            return wrapObservable(pluginObj, methodName, args, opts);\n        }\n        else if (opts.eventObservable && opts.event) {\n            return wrapEventObservable(opts.event, opts.element);\n        }\n        else if (opts.otherPromise) {\n            return wrapOtherPromise(pluginObj, methodName, args, opts);\n        }\n        else {\n            return wrapPromise(pluginObj, methodName, args, opts);\n        }\n    };\n};\n/**\n * @private\n */\nexport function wrapInstance(pluginObj, methodName, opts) {\n    if (opts === void 0) { opts = {}; }\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (opts.sync) {\n            return callInstance(pluginObj, methodName, args, opts);\n        }\n        else if (opts.observable) {\n            return new Observable(function (observer) {\n                var pluginResult;\n                if (opts.destruct) {\n                    pluginResult = callInstance(pluginObj, methodName, args, opts, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        return observer.next(args);\n                    }, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        return observer.error(args);\n                    });\n                }\n                else {\n                    pluginResult = callInstance(pluginObj, methodName, args, opts, observer.next.bind(observer), observer.error.bind(observer));\n                }\n                if (pluginResult && pluginResult.error) {\n                    observer.error(pluginResult.error);\n                    observer.complete();\n                }\n                return function () {\n                    try {\n                        if (opts.clearWithArgs) {\n                            return callInstance(pluginObj, opts.clearFunction, args, opts, observer.next.bind(observer), observer.error.bind(observer));\n                        }\n                        return callInstance(pluginObj, opts.clearFunction, []);\n                    }\n                    catch (e) {\n                        console.warn('Unable to clear the previous observable watch for', pluginObj.constructor.getPluginName(), methodName);\n                        console.warn(e);\n                    }\n                };\n            });\n        }\n        else if (opts.otherPromise) {\n            return getPromise(function (resolve, reject) {\n                var result;\n                if (opts.destruct) {\n                    result = callInstance(pluginObj, methodName, args, opts, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        return resolve(args);\n                    }, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        return reject(args);\n                    });\n                }\n                else {\n                    result = callInstance(pluginObj, methodName, args, opts, resolve, reject);\n                }\n                if (result && !!result.then) {\n                    result.then(resolve, reject);\n                }\n                else {\n                    reject();\n                }\n            });\n        }\n        else {\n            var pluginResult_1, rej_1;\n            var p = getPromise(function (resolve, reject) {\n                if (opts.destruct) {\n                    pluginResult_1 = callInstance(pluginObj, methodName, args, opts, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        return resolve(args);\n                    }, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        return reject(args);\n                    });\n                }\n                else {\n                    pluginResult_1 = callInstance(pluginObj, methodName, args, opts, resolve, reject);\n                }\n                rej_1 = reject;\n            });\n            // Angular throws an error on unhandled rejection, but in this case we have already printed\n            // a warning that Cordova is undefined or the plugin is uninstalled, so there is no reason\n            // to error\n            if (pluginResult_1 && pluginResult_1.error) {\n                p.catch(function () { });\n                typeof rej_1 === 'function' && rej_1(pluginResult_1.error);\n            }\n            return p;\n        }\n    };\n}\n//# sourceMappingURL=plugin.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/core/plugin.js\n// module id = 913\n// module chunks = 0 1 2 3 4 5 6 7 11 12","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"rxjs-compat/observable/fromEvent\"));\n//# sourceMappingURL=fromEvent.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/observable/fromEvent.js\n// module id = 914\n// module chunks = 0 1 2 3 4 5 6 7 11 12","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nexports.fromEvent = rxjs_1.fromEvent;\n//# sourceMappingURL=fromEvent.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs-compat/observable/fromEvent.js\n// module id = 915\n// module chunks = 0 1 2 3 4 5 6 7 11 12","export function checkReady() {\n    var DEVICE_READY_TIMEOUT = 5000;\n    // To help developers using cordova, we listen for the device ready event and\n    // log an error if it didn't fire in a reasonable amount of time. Generally,\n    // when this happens, developers should remove and reinstall plugins, since\n    // an inconsistent plugin is often the culprit.\n    var before = Date.now();\n    var didFireReady = false;\n    document.addEventListener('deviceready', function () {\n        console.log(\"Ionic Native: deviceready event fired after \" + (Date.now() - before) + \" ms\");\n        didFireReady = true;\n    });\n    setTimeout(function () {\n        if (!didFireReady && !!window.cordova) {\n            console.warn(\"Ionic Native: deviceready did not fire within \" + DEVICE_READY_TIMEOUT + \"ms. This can happen when plugins are in an inconsistent state. Try removing plugins from plugins/ and reinstalling them.\");\n        }\n    }, DEVICE_READY_TIMEOUT);\n}\n//# sourceMappingURL=bootstrap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/core/bootstrap.js\n// module id = 916\n// module chunks = 0 1 2 3 4 5 6 7 11 12","import { Observable } from 'rxjs/Observable';\nimport { _throw } from 'rxjs/observable/throw';\nimport { checkAvailability, instanceAvailability, overrideFunction, wrap, wrapInstance } from './plugin';\nimport { getPlugin, getPromise } from './util';\n/**\n * @private\n */\nexport function InstanceCheck(opts) {\n    if (opts === void 0) { opts = {}; }\n    return function (pluginObj, methodName, descriptor) {\n        return {\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                if (instanceAvailability(this)) {\n                    return descriptor.value.apply(this, args);\n                }\n                else {\n                    if (opts.sync) {\n                        return;\n                    }\n                    else if (opts.observable) {\n                        return new Observable(function () { });\n                    }\n                    return getPromise(function () { });\n                }\n            },\n            enumerable: true\n        };\n    };\n}\n/**\n * Executes function only if plugin is available\n * @private\n */\nexport function CordovaCheck(opts) {\n    if (opts === void 0) { opts = {}; }\n    return function (pluginObj, methodName, descriptor) {\n        return {\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var check = checkAvailability(pluginObj);\n                if (check === true) {\n                    return descriptor.value.apply(this, args);\n                }\n                else {\n                    if (opts.sync) {\n                        return null;\n                    }\n                    else if (opts.observable) {\n                        return _throw(new Error(check && check.error));\n                    }\n                    return Promise.reject(check && check.error);\n                }\n            },\n            enumerable: true\n        };\n    };\n}\n/**\n * @private\n *\n * Class decorator specifying Plugin metadata. Required for all plugins.\n *\n * @usage\n * ```typescript\n * @Plugin({\n *  pluginName: 'MyPlugin',\n *  plugin: 'cordova-plugin-myplugin',\n *  pluginRef: 'window.myplugin'\n *  })\n *  export class MyPlugin {\n *\n *    // Plugin wrappers, properties, and functions go here ...\n *\n *  }\n * ```\n */\nexport function Plugin(config) {\n    return function (cls) {\n        // Add these fields to the class\n        for (var prop in config) {\n            cls[prop] = config[prop];\n        }\n        cls['installed'] = function (printWarning) {\n            return !!getPlugin(config.pluginRef);\n        };\n        cls['getPlugin'] = function () {\n            return getPlugin(config.pluginRef);\n        };\n        cls['checkInstall'] = function () {\n            return checkAvailability(cls) === true;\n        };\n        cls['getPluginName'] = function () {\n            return config.pluginName;\n        };\n        cls['getPluginRef'] = function () {\n            return config.pluginRef;\n        };\n        cls['getPluginInstallName'] = function () {\n            return config.plugin;\n        };\n        cls['getPluginRepo'] = function () {\n            return config.repo;\n        };\n        cls['getSupportedPlatforms'] = function () {\n            return config.platforms;\n        };\n        return cls;\n    };\n}\n/**\n * @private\n *\n * Wrap a stub function in a call to a Cordova plugin, checking if both Cordova\n * and the required plugin are installed.\n */\nexport function Cordova(opts) {\n    if (opts === void 0) { opts = {}; }\n    return function (target, methodName, descriptor) {\n        return {\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return wrap(this, methodName, opts).apply(this, args);\n            },\n            enumerable: true\n        };\n    };\n}\n/**\n * @private\n *\n * Wrap an instance method\n */\nexport function CordovaInstance(opts) {\n    if (opts === void 0) { opts = {}; }\n    return function (target, methodName) {\n        return {\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return wrapInstance(this, methodName, opts).apply(this, args);\n            },\n            enumerable: true\n        };\n    };\n}\n/**\n * @private\n *\n *\n * Before calling the original method, ensure Cordova and the plugin are installed.\n */\nexport function CordovaProperty(target, key) {\n    Object.defineProperty(target, key, {\n        enumerable: true,\n        get: function () {\n            if (checkAvailability(target, key) === true) {\n                return getPlugin(target.constructor.getPluginRef())[key];\n            }\n            else {\n                return null;\n            }\n        },\n        set: function (value) {\n            if (checkAvailability(target, key) === true) {\n                getPlugin(target.constructor.getPluginRef())[key] = value;\n            }\n        }\n    });\n}\n/**\n * @private\n * @param target\n * @param key\n * @constructor\n */\nexport function InstanceProperty(target, key) {\n    Object.defineProperty(target, key, {\n        enumerable: true,\n        get: function () {\n            return this._objectInstance[key];\n        },\n        set: function (value) {\n            this._objectInstance[key] = value;\n        }\n    });\n}\n/**\n * @private\n *\n * Wrap a stub function in a call to a Cordova plugin, checking if both Cordova\n * and the required plugin are installed.\n */\nexport function CordovaFunctionOverride(opts) {\n    if (opts === void 0) { opts = {}; }\n    return function (target, methodName, descriptor) {\n        return {\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return overrideFunction(this, methodName, opts);\n            },\n            enumerable: true\n        };\n    };\n}\n//# sourceMappingURL=decorators.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/core/decorators.js\n// module id = 917\n// module chunks = 0 1 2 3 4 5 6 7 11 12","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"rxjs-compat/observable/throw\"));\n//# sourceMappingURL=throw.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/observable/throw.js\n// module id = 918\n// module chunks = 0 1 2 3 4 5 6 7 11 12","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nexports._throw = rxjs_1.throwError;\n//# sourceMappingURL=throw.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs-compat/observable/throw.js\n// module id = 919\n// module chunks = 0 1 2 3 4 5 6 7 11 12","var IonicNativePlugin = (function () {\n    function IonicNativePlugin() {\n    }\n    /**\n     * Returns a boolean that indicates whether the plugin is installed\n     * @return {boolean}\n     */\n    /**\n       * Returns a boolean that indicates whether the plugin is installed\n       * @return {boolean}\n       */\n    IonicNativePlugin.installed = /**\n       * Returns a boolean that indicates whether the plugin is installed\n       * @return {boolean}\n       */\n    function () {\n        return false;\n    };\n    /**\n     * Returns the original plugin object\n     */\n    /**\n       * Returns the original plugin object\n       */\n    IonicNativePlugin.getPlugin = /**\n       * Returns the original plugin object\n       */\n    function () { };\n    /**\n     * Returns the plugin's name\n     */\n    /**\n       * Returns the plugin's name\n       */\n    IonicNativePlugin.getPluginName = /**\n       * Returns the plugin's name\n       */\n    function () {\n        return;\n    };\n    /**\n     * Returns the plugin's reference\n     */\n    /**\n       * Returns the plugin's reference\n       */\n    IonicNativePlugin.getPluginRef = /**\n       * Returns the plugin's reference\n       */\n    function () {\n        return;\n    };\n    /**\n     * Returns the plugin's install name\n     */\n    /**\n       * Returns the plugin's install name\n       */\n    IonicNativePlugin.getPluginInstallName = /**\n       * Returns the plugin's install name\n       */\n    function () {\n        return;\n    };\n    /**\n     * Returns the plugin's supported platforms\n     */\n    /**\n       * Returns the plugin's supported platforms\n       */\n    IonicNativePlugin.getSupportedPlatforms = /**\n       * Returns the plugin's supported platforms\n       */\n    function () {\n        return;\n    };\n    return IonicNativePlugin;\n}());\nexport { IonicNativePlugin };\n//# sourceMappingURL=ionic-native-plugin.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/core/ionic-native-plugin.js\n// module id = 920\n// module chunks = 0 1 2 3 4 5 6 7 11 12","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { CordovaInstance, Plugin, InstanceCheck, checkAvailability, IonicNativePlugin } from '@ionic-native/core';\n/**\n * @name Transfer\n *\n * @description\n * This plugin allows you to upload and download files.\n *\n * @usage\n * ```typescript\n * import { Transfer, FileUploadOptions, TransferObject } from '@ionic-native/transfer';\n * import { File } from '@ionic-native/file';\n *\n * constructor(private transfer: Transfer, private file: File) { }\n *\n * ...\n *\n * const fileTransfer: TransferObject = this.transfer.create();\n *\n * // Upload a file:\n * fileTransfer.upload(..).then(..).catch(..);\n *\n * // Download a file:\n * fileTransfer.download(..).then(..).catch(..);\n *\n * // Abort active transfer:\n * fileTransfer.abort();\n *\n * // full example\n * upload() {\n *   let options: FileUploadOptions = {\n *      fileKey: 'file',\n *      fileName: 'name.jpg',\n *      headers: {}\n *      .....\n *   }\n *\n *   fileTransfer.upload('<file path>', '<api endpoint>', options)\n *    .then((data) => {\n *      // success\n *    }, (err) => {\n *      // error\n *    })\n * }\n **\n * download() {\n *   const url = 'http://www.example.com/file.pdf';\n *   fileTransfer.download(url, this.file.dataDirectory + 'file.pdf').then((entry) => {\n *     console.log('download complete: ' + entry.toURL());\n *   }, (error) => {\n *     // handle error\n *   });\n * }\n *\n * ```\n *\n * To store files in a different/publicly accessible directory, please refer to the following link\n * https://github.com/apache/cordova-plugin-file#where-to-store-files\n *\n * @interfaces\n * FileUploadOptions\n * FileUploadResult\n * FileTransferError\n * @classes\n * TransferObject\n */\nvar Transfer = (function (_super) {\n    __extends(Transfer, _super);\n    function Transfer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Error code rejected from upload with FileTransferError\n         * Defined in FileTransferError.\n         *      FILE_NOT_FOUND_ERR: 1   Return when file was not found\n         *      INVALID_URL_ERR: 2,     Return when url was invalid\n         *      CONNECTION_ERR: 3,      Return on connection error\n         *      ABORT_ERR: 4,           Return on aborting\n         *      NOT_MODIFIED_ERR: 5     Return on '304 Not Modified' HTTP response\n         * @enum {number}\n         */\n        _this.FileTransferErrorCode = {\n            FILE_NOT_FOUND_ERR: 1,\n            INVALID_URL_ERR: 2,\n            CONNECTION_ERR: 3,\n            ABORT_ERR: 4,\n            NOT_MODIFIED_ERR: 5\n        };\n        return _this;\n    }\n    /**\n     * Creates a new FileTransfer object\n     * @return {TransferObject}\n     */\n    Transfer.prototype.create = function () {\n        return new TransferObject();\n    };\n    return Transfer;\n}(IonicNativePlugin));\nTransfer.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nTransfer.ctorParameters = function () { return []; };\nTransfer = __decorate([\n    Plugin({\n        pluginName: 'FileTransfer',\n        plugin: 'cordova-plugin-file-transfer',\n        pluginRef: 'FileTransfer',\n        repo: 'https://github.com/apache/cordova-plugin-file-transfer',\n        platforms: ['Amazon Fire OS', 'Android', 'Browser', 'iOS', 'Ubuntu', 'Windows', 'Windows Phone']\n    })\n], Transfer);\nexport { Transfer };\n/**\n * @hidden\n */\nvar TransferObject = (function () {\n    function TransferObject() {\n        if (checkAvailability('FileTransfer', null, 'FileTransfer') === true) {\n            this._objectInstance = new FileTransfer();\n        }\n    }\n    /**\n     * Sends a file to a server.\n     *\n     * @param {string} fileUrl  Filesystem URL representing the file on the device or a data URI. For backwards compatibility, this can also be the full path of the file on the device.\n     * @param {string} url  URL of the server to receive the file, as encoded by encodeURI().\n     * @param {FileUploadOptions} options  Optional parameters.\n     * @param {boolean} trustAllHosts  Optional parameter, defaults to false. If set to true, it accepts all security certificates. This is useful since Android rejects self-signed security certificates. Not recommended for production use. Supported on Android and iOS.\n     * @returns {Promise<FileUploadResult>} Returns a Promise that resolves to a FileUploadResult and rejects with FileTransferError.\n     */\n    TransferObject.prototype.upload = function (fileUrl, url, options, trustAllHosts) {\n        return;\n    };\n    /**\n     * Downloads a file from server.\n     *\n     * @param {string} source  URL of the server to download the file, as encoded by encodeURI().\n     * @param {string} target  Filesystem url representing the file on the device. For backwards compatibility, this can also be the full path of the file on the device.\n     * @param {boolean} trustAllHosts  Optional parameter, defaults to false. If set to true, it accepts all security certificates. This is useful because Android rejects self-signed security certificates. Not recommended for production use. Supported on Android and iOS.\n     * @param {object} Optional parameters, currently only supports headers (such as Authorization (Basic Authentication), etc).\n     * @returns {Promise<any>} Returns a Promise that resolves to a FileEntry object.\n     */\n    TransferObject.prototype.download = function (source, target, trustAllHosts, options) {\n        return;\n    };\n    /**\n     * Registers a listener that gets called whenever a new chunk of data is transferred.\n     * @param listener {function} Listener that takes a progress event.\n     */\n    TransferObject.prototype.onProgress = function (listener) {\n        this._objectInstance.onprogress = listener;\n    };\n    /**\n     * Aborts an in-progress transfer. The onerror callback is passed a FileTransferError\n     * object which has an error code of FileTransferError.ABORT_ERR.\n     */\n    TransferObject.prototype.abort = function () { };\n    return TransferObject;\n}());\n__decorate([\n    CordovaInstance({\n        successIndex: 2,\n        errorIndex: 3\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String, Object, Boolean]),\n    __metadata(\"design:returntype\", Promise)\n], TransferObject.prototype, \"upload\", null);\n__decorate([\n    CordovaInstance({\n        successIndex: 2,\n        errorIndex: 3\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String, Boolean, Object]),\n    __metadata(\"design:returntype\", Promise)\n], TransferObject.prototype, \"download\", null);\n__decorate([\n    InstanceCheck({ sync: true }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Function]),\n    __metadata(\"design:returntype\", void 0)\n], TransferObject.prototype, \"onProgress\", null);\n__decorate([\n    CordovaInstance({\n        sync: true\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", void 0)\n], TransferObject.prototype, \"abort\", null);\nTransferObject = __decorate([\n    Plugin({\n        plugin: 'cordova-plugin-file-transfer',\n        pluginName: 'FileTransfer'\n    }),\n    __metadata(\"design:paramtypes\", [])\n], TransferObject);\nexport { TransferObject };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/transfer/index.js\n// module id = 921\n// module chunks = 2 3 4 5 6 7","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n/**\n * @name File Path\n * @description\n *\n * This plugin allows you to resolve the native filesystem path for Android content URIs and is based on code in the aFileChooser library.\n *\n * @usage\n * ```typescript\n * import { FilePath } from '@ionic-native/file-path';\n *\n * constructor(private filePath: FilePath) { }\n *\n * ...\n *\n * this.filePath.resolveNativePath(path)\n *   .then(filePath => console.log(filePath))\n *   .catch(err => console.log(err));\n *\n * ```\n */\nvar FilePath = (function (_super) {\n    __extends(FilePath, _super);\n    function FilePath() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Resolve native path for given content URL/path.\n     * @param {string} path  Content URL/path.\n     * @returns {Promise<string>}\n     */\n    /**\n       * Resolve native path for given content URL/path.\n       * @param {string} path  Content URL/path.\n       * @returns {Promise<string>}\n       */\n    FilePath.prototype.resolveNativePath = /**\n       * Resolve native path for given content URL/path.\n       * @param {string} path  Content URL/path.\n       * @returns {Promise<string>}\n       */\n    function (path) {\n        return;\n    };\n    FilePath.decorators = [\n        { type: Injectable },\n    ];\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], FilePath.prototype, \"resolveNativePath\", null);\n    /**\n     * @name File Path\n     * @description\n     *\n     * This plugin allows you to resolve the native filesystem path for Android content URIs and is based on code in the aFileChooser library.\n     *\n     * @usage\n     * ```typescript\n     * import { FilePath } from '@ionic-native/file-path';\n     *\n     * constructor(private filePath: FilePath) { }\n     *\n     * ...\n     *\n     * this.filePath.resolveNativePath(path)\n     *   .then(filePath => console.log(filePath))\n     *   .catch(err => console.log(err));\n     *\n     * ```\n     */\n    FilePath = __decorate([\n        Plugin({\n            pluginName: 'FilePath',\n            plugin: 'cordova-plugin-filepath',\n            pluginRef: 'window.FilePath',\n            repo: 'https://github.com/hiddentao/cordova-plugin-filepath',\n            platforms: ['Android']\n        })\n    ], FilePath);\n    return FilePath;\n}(IonicNativePlugin));\nexport { FilePath };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/file-path/index.js\n// module id = 922\n// module chunks = 2 3 4 5 6 7","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\nexport var DestinationType;\n(function (DestinationType) {\n    DestinationType[DestinationType[\"DATA_URL\"] = 0] = \"DATA_URL\";\n    DestinationType[DestinationType[\"FILE_URL\"] = 1] = \"FILE_URL\";\n    DestinationType[DestinationType[\"NATIVE_URI\"] = 2] = \"NATIVE_URI\";\n})(DestinationType || (DestinationType = {}));\nexport var EncodingType;\n(function (EncodingType) {\n    EncodingType[EncodingType[\"JPEG\"] = 0] = \"JPEG\";\n    EncodingType[EncodingType[\"PNG\"] = 1] = \"PNG\";\n})(EncodingType || (EncodingType = {}));\nexport var MediaType;\n(function (MediaType) {\n    MediaType[MediaType[\"PICTURE\"] = 0] = \"PICTURE\";\n    MediaType[MediaType[\"VIDEO\"] = 1] = \"VIDEO\";\n    MediaType[MediaType[\"ALLMEDIA\"] = 2] = \"ALLMEDIA\";\n})(MediaType || (MediaType = {}));\nexport var PictureSourceType;\n(function (PictureSourceType) {\n    PictureSourceType[PictureSourceType[\"PHOTOLIBRARY\"] = 0] = \"PHOTOLIBRARY\";\n    PictureSourceType[PictureSourceType[\"CAMERA\"] = 1] = \"CAMERA\";\n    PictureSourceType[PictureSourceType[\"SAVEDPHOTOALBUM\"] = 2] = \"SAVEDPHOTOALBUM\";\n})(PictureSourceType || (PictureSourceType = {}));\nexport var PopoverArrowDirection;\n(function (PopoverArrowDirection) {\n    PopoverArrowDirection[PopoverArrowDirection[\"ARROW_UP\"] = 1] = \"ARROW_UP\";\n    PopoverArrowDirection[PopoverArrowDirection[\"ARROW_DOWN\"] = 2] = \"ARROW_DOWN\";\n    PopoverArrowDirection[PopoverArrowDirection[\"ARROW_LEFT\"] = 3] = \"ARROW_LEFT\";\n    PopoverArrowDirection[PopoverArrowDirection[\"ARROW_RIGHT\"] = 4] = \"ARROW_RIGHT\";\n    PopoverArrowDirection[PopoverArrowDirection[\"ARROW_ANY\"] = 5] = \"ARROW_ANY\";\n})(PopoverArrowDirection || (PopoverArrowDirection = {}));\nexport var Direction;\n(function (Direction) {\n    Direction[Direction[\"BACK\"] = 0] = \"BACK\";\n    Direction[Direction[\"FRONT\"] = 1] = \"FRONT\";\n})(Direction || (Direction = {}));\n/**\n * @name Camera\n * @description\n * Take a photo or capture video.\n *\n * Requires the Cordova plugin: `cordova-plugin-camera`. For more info, please see the [Cordova Camera Plugin Docs](https://github.com/apache/cordova-plugin-camera).\n *\n * [Warning] Since IOS 10 the camera requires permissions to be placed in your config.xml add\n * ```xml\n * <config-file parent=\"NSCameraUsageDescription\" platform=\"ios\" target=\"*-Info.plist\">\n *  <string>You can take photos</string>\n * </config-file>\n * ```\n * inside of the <platform name='ios> section\n *\n * @usage\n * ```typescript\n * import { Camera, CameraOptions } from '@ionic-native/camera';\n *\n * constructor(private camera: Camera) { }\n *\n * ...\n *\n *\n * const options: CameraOptions = {\n *   quality: 100,\n *   destinationType: this.camera.DestinationType.FILE_URI,\n *   encodingType: this.camera.EncodingType.JPEG,\n *   mediaType: this.camera.MediaType.PICTURE\n * }\n *\n * this.camera.getPicture(options).then((imageData) => {\n *  // imageData is either a base64 encoded string or a file URI\n *  // If it's base64 (DATA_URL):\n *  let base64Image = 'data:image/jpeg;base64,' + imageData;\n * }, (err) => {\n *  // Handle error\n * });\n * ```\n * @interfaces\n * CameraOptions\n * CameraPopoverOptions\n */\nvar Camera = (function (_super) {\n    __extends(Camera, _super);\n    function Camera() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n           * Constant for possible destination types\n           */\n        _this.DestinationType = {\n            /** Return base64 encoded string. DATA_URL can be very memory intensive and cause app crashes or out of memory errors. Use FILE_URI or NATIVE_URI if possible */\n            DATA_URL: 0,\n            /** Return file uri (content://media/external/images/media/2 for Android) */\n            FILE_URI: 1,\n            /** Return native uri (eg. asset-library://... for iOS) */\n            NATIVE_URI: 2\n        };\n        /**\n           * Convenience constant\n           */\n        _this.EncodingType = {\n            /** Return JPEG encoded image */\n            JPEG: 0,\n            /** Return PNG encoded image */\n            PNG: 1\n        };\n        /**\n           * Convenience constant\n           */\n        _this.MediaType = {\n            /** Allow selection of still pictures only. DEFAULT. Will return format specified via DestinationType */\n            PICTURE: 0,\n            /** Allow selection of video only, ONLY RETURNS URL */\n            VIDEO: 1,\n            /** Allow selection from all media types */\n            ALLMEDIA: 2\n        };\n        /**\n           * Convenience constant\n           */\n        _this.PictureSourceType = {\n            /** Choose image from picture library (same as SAVEDPHOTOALBUM for Android) */\n            PHOTOLIBRARY: 0,\n            /** Take picture from camera */\n            CAMERA: 1,\n            /** Choose image from picture library (same as PHOTOLIBRARY for Android) */\n            SAVEDPHOTOALBUM: 2\n        };\n        /**\n           * Convenience constant\n           */\n        _this.PopoverArrowDirection = {\n            ARROW_UP: 1,\n            ARROW_DOWN: 2,\n            ARROW_LEFT: 4,\n            ARROW_RIGHT: 8,\n            ARROW_ANY: 15\n        };\n        /**\n           * Convenience constant\n           */\n        _this.Direction = {\n            /** Use the back-facing camera */\n            BACK: 0,\n            /** Use the front-facing camera */\n            FRONT: 1\n        };\n        return _this;\n    }\n    /**\n     * Take a picture or video, or load one from the library.\n     * @param {CameraOptions} [options] Options that you want to pass to the camera. Encoding type, quality, etc. Platform-specific quirks are described in the [Cordova plugin docs](https://github.com/apache/cordova-plugin-camera#cameraoptions-errata-).\n     * @returns {Promise<any>} Returns a Promise that resolves with Base64 encoding of the image data, or the image file URI, depending on cameraOptions, otherwise rejects with an error.\n     */\n    /**\n       * Take a picture or video, or load one from the library.\n       * @param {CameraOptions} [options] Options that you want to pass to the camera. Encoding type, quality, etc. Platform-specific quirks are described in the [Cordova plugin docs](https://github.com/apache/cordova-plugin-camera#cameraoptions-errata-).\n       * @returns {Promise<any>} Returns a Promise that resolves with Base64 encoding of the image data, or the image file URI, depending on cameraOptions, otherwise rejects with an error.\n       */\n    Camera.prototype.getPicture = /**\n       * Take a picture or video, or load one from the library.\n       * @param {CameraOptions} [options] Options that you want to pass to the camera. Encoding type, quality, etc. Platform-specific quirks are described in the [Cordova plugin docs](https://github.com/apache/cordova-plugin-camera#cameraoptions-errata-).\n       * @returns {Promise<any>} Returns a Promise that resolves with Base64 encoding of the image data, or the image file URI, depending on cameraOptions, otherwise rejects with an error.\n       */\n    function (options) {\n        return;\n    };\n    /**\n     * Remove intermediate image files that are kept in temporary storage after calling camera.getPicture.\n     * Applies only when the value of Camera.sourceType equals Camera.PictureSourceType.CAMERA and the Camera.destinationType equals Camera.DestinationType.FILE_URI.\n     * @returns {Promise<any>}\n     */\n    /**\n       * Remove intermediate image files that are kept in temporary storage after calling camera.getPicture.\n       * Applies only when the value of Camera.sourceType equals Camera.PictureSourceType.CAMERA and the Camera.destinationType equals Camera.DestinationType.FILE_URI.\n       * @returns {Promise<any>}\n       */\n    Camera.prototype.cleanup = /**\n       * Remove intermediate image files that are kept in temporary storage after calling camera.getPicture.\n       * Applies only when the value of Camera.sourceType equals Camera.PictureSourceType.CAMERA and the Camera.destinationType equals Camera.DestinationType.FILE_URI.\n       * @returns {Promise<any>}\n       */\n    function () {\n        return;\n    };\n    Camera.decorators = [\n        { type: Injectable },\n    ];\n    __decorate([\n        Cordova({\n            callbackOrder: 'reverse'\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], Camera.prototype, \"getPicture\", null);\n    __decorate([\n        Cordova({\n            platforms: ['iOS']\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], Camera.prototype, \"cleanup\", null);\n    /**\n     * @name Camera\n     * @description\n     * Take a photo or capture video.\n     *\n     * Requires the Cordova plugin: `cordova-plugin-camera`. For more info, please see the [Cordova Camera Plugin Docs](https://github.com/apache/cordova-plugin-camera).\n     *\n     * [Warning] Since IOS 10 the camera requires permissions to be placed in your config.xml add\n     * ```xml\n     * <config-file parent=\"NSCameraUsageDescription\" platform=\"ios\" target=\"*-Info.plist\">\n     *  <string>You can take photos</string>\n     * </config-file>\n     * ```\n     * inside of the <platform name='ios> section\n     *\n     * @usage\n     * ```typescript\n     * import { Camera, CameraOptions } from '@ionic-native/camera';\n     *\n     * constructor(private camera: Camera) { }\n     *\n     * ...\n     *\n     *\n     * const options: CameraOptions = {\n     *   quality: 100,\n     *   destinationType: this.camera.DestinationType.FILE_URI,\n     *   encodingType: this.camera.EncodingType.JPEG,\n     *   mediaType: this.camera.MediaType.PICTURE\n     * }\n     *\n     * this.camera.getPicture(options).then((imageData) => {\n     *  // imageData is either a base64 encoded string or a file URI\n     *  // If it's base64 (DATA_URL):\n     *  let base64Image = 'data:image/jpeg;base64,' + imageData;\n     * }, (err) => {\n     *  // Handle error\n     * });\n     * ```\n     * @interfaces\n     * CameraOptions\n     * CameraPopoverOptions\n     */\n    Camera = __decorate([\n        Plugin({\n            pluginName: 'Camera',\n            plugin: 'cordova-plugin-camera',\n            pluginRef: 'navigator.camera',\n            repo: 'https://github.com/apache/cordova-plugin-camera',\n            platforms: ['Android', 'Browser', 'iOS', 'Windows']\n        })\n    ], Camera);\n    return Camera;\n}(IonicNativePlugin));\nexport { Camera };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/camera/index.js\n// module id = 923\n// module chunks = 2 3 4 5 6 7","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { CordovaCheck, CordovaProperty, IonicNativePlugin, Plugin } from '@ionic-native/core';\n/**\n * @name File\n * @description\n * This plugin implements a File API allowing read/write access to files residing on the device.\n *\n * The File class implements static convenience functions to access files and directories.\n *\n * Example:\n * ```\n * import { File } from '@ionic-native/file';\n *\n * constructor(private file: File) { }\n *\n * ...\n *\n * this.file.checkDir(this.file.dataDirectory, 'mydir').then(_ => console.log('Directory exists')).catch(err => console.log('Directory doesn\\'t exist'));\n *\n * ```\n *\n *  This plugin is based on several specs, including : The HTML5 File API http: //www.w3.org/TR/FileAPI/\n *  The (now-defunct) Directories and System extensions Latest: http: //www.w3.org/TR/2012/WD-file-system-api-20120417/\n *  Although most of the plugin code was written when an earlier spec was current: http: //www.w3.org/TR/2011/WD-file-system-api-20110419/\n *  It also implements the FileWriter spec : http: //dev.w3.org/2009/dap/file-system/file-writer.html\n *  @interfaces\n *  IFile\n *  Entry\n *  DirectoryEntry\n *  DirectoryReader\n *  FileSystem\n */\nvar File = (function (_super) {\n    __extends(File, _super);\n    function File() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.cordovaFileError = {\n            1: 'NOT_FOUND_ERR',\n            2: 'SECURITY_ERR',\n            3: 'ABORT_ERR',\n            4: 'NOT_READABLE_ERR',\n            5: 'ENCODING_ERR',\n            6: 'NO_MODIFICATION_ALLOWED_ERR',\n            7: 'INVALID_STATE_ERR',\n            8: 'SYNTAX_ERR',\n            9: 'INVALID_MODIFICATION_ERR',\n            10: 'QUOTA_EXCEEDED_ERR',\n            11: 'TYPE_MISMATCH_ERR',\n            12: 'PATH_EXISTS_ERR',\n            13: 'WRONG_ENTRY_TYPE',\n            14: 'DIR_READ_ERR'\n        };\n        return _this;\n    }\n    /**\n     * Get free disk space in Bytes\n     * @returns {Promise<number>} Returns a promise that resolves with the remaining free disk space in Bytes\n     */\n    /**\n       * Get free disk space in Bytes\n       * @returns {Promise<number>} Returns a promise that resolves with the remaining free disk space in Bytes\n       */\n    File.prototype.getFreeDiskSpace = /**\n       * Get free disk space in Bytes\n       * @returns {Promise<number>} Returns a promise that resolves with the remaining free disk space in Bytes\n       */\n    function () {\n        return new Promise(function (resolve, reject) {\n            cordova.exec(resolve, reject, 'File', 'getFreeDiskSpace', []);\n        });\n    };\n    /**\n     * Check if a directory exists in a certain path, directory.\n     *\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystem above\n     * @param {string} dir Name of directory to check\n     * @returns {Promise<boolean>} Returns a Promise that resolves to true if the directory exists or rejects with an error.\n     */\n    /**\n       * Check if a directory exists in a certain path, directory.\n       *\n       * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystem above\n       * @param {string} dir Name of directory to check\n       * @returns {Promise<boolean>} Returns a Promise that resolves to true if the directory exists or rejects with an error.\n       */\n    File.prototype.checkDir = /**\n       * Check if a directory exists in a certain path, directory.\n       *\n       * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystem above\n       * @param {string} dir Name of directory to check\n       * @returns {Promise<boolean>} Returns a Promise that resolves to true if the directory exists or rejects with an error.\n       */\n    function (path, dir) {\n        if (/^\\//.test(dir)) {\n            var err = new FileError(5);\n            err.message = 'directory cannot start with /';\n            return Promise.reject(err);\n        }\n        var fullPath = path + dir;\n        return this.resolveDirectoryUrl(fullPath).then(function () {\n            return true;\n        });\n    };\n    /**\n     * Creates a new directory in the specific path.\n     * The replace boolean value determines whether to replace an existing directory with the same name.\n     * If an existing directory exists and the replace value is false, the promise will fail and return an error.\n     *\n     * @param {string} path  Base FileSystem. Please refer to the iOS and Android filesystem above\n     * @param {string} dirName Name of directory to create\n     * @param {boolean} replace If true, replaces file with same name. If false returns error\n     * @returns {Promise<DirectoryEntry>} Returns a Promise that resolves with a DirectoryEntry or rejects with an error.\n     */\n    /**\n       * Creates a new directory in the specific path.\n       * The replace boolean value determines whether to replace an existing directory with the same name.\n       * If an existing directory exists and the replace value is false, the promise will fail and return an error.\n       *\n       * @param {string} path  Base FileSystem. Please refer to the iOS and Android filesystem above\n       * @param {string} dirName Name of directory to create\n       * @param {boolean} replace If true, replaces file with same name. If false returns error\n       * @returns {Promise<DirectoryEntry>} Returns a Promise that resolves with a DirectoryEntry or rejects with an error.\n       */\n    File.prototype.createDir = /**\n       * Creates a new directory in the specific path.\n       * The replace boolean value determines whether to replace an existing directory with the same name.\n       * If an existing directory exists and the replace value is false, the promise will fail and return an error.\n       *\n       * @param {string} path  Base FileSystem. Please refer to the iOS and Android filesystem above\n       * @param {string} dirName Name of directory to create\n       * @param {boolean} replace If true, replaces file with same name. If false returns error\n       * @returns {Promise<DirectoryEntry>} Returns a Promise that resolves with a DirectoryEntry or rejects with an error.\n       */\n    function (path, dirName, replace) {\n        var _this = this;\n        if (/^\\//.test(dirName)) {\n            var err = new FileError(5);\n            err.message = 'directory cannot start with /';\n            return Promise.reject(err);\n        }\n        var options = {\n            create: true\n        };\n        if (!replace) {\n            options.exclusive = true;\n        }\n        return this.resolveDirectoryUrl(path).then(function (fse) {\n            return _this.getDirectory(fse, dirName, options);\n        });\n    };\n    /**\n     * Remove a directory at a given path.\n     *\n     * @param {string} path The path to the directory\n     * @param {string} dirName The directory name\n     * @returns {Promise<RemoveResult>} Returns a Promise that resolves to a RemoveResult or rejects with an error.\n     */\n    /**\n       * Remove a directory at a given path.\n       *\n       * @param {string} path The path to the directory\n       * @param {string} dirName The directory name\n       * @returns {Promise<RemoveResult>} Returns a Promise that resolves to a RemoveResult or rejects with an error.\n       */\n    File.prototype.removeDir = /**\n       * Remove a directory at a given path.\n       *\n       * @param {string} path The path to the directory\n       * @param {string} dirName The directory name\n       * @returns {Promise<RemoveResult>} Returns a Promise that resolves to a RemoveResult or rejects with an error.\n       */\n    function (path, dirName) {\n        var _this = this;\n        if (/^\\//.test(dirName)) {\n            var err = new FileError(5);\n            err.message = 'directory cannot start with /';\n            return Promise.reject(err);\n        }\n        return this.resolveDirectoryUrl(path)\n            .then(function (fse) {\n            return _this.getDirectory(fse, dirName, { create: false });\n        })\n            .then(function (de) {\n            return _this.remove(de);\n        });\n    };\n    /**\n     * Move a directory to a given path.\n     *\n     * @param {string} path The source path to the directory\n     * @param {string} dirName The source directory name\n     * @param {string} newPath The destination path to the directory\n     * @param {string} newDirName The destination directory name\n     * @returns {Promise<DirectoryEntry|Entry>} Returns a Promise that resolves to the new DirectoryEntry object or rejects with an error.\n     */\n    /**\n       * Move a directory to a given path.\n       *\n       * @param {string} path The source path to the directory\n       * @param {string} dirName The source directory name\n       * @param {string} newPath The destination path to the directory\n       * @param {string} newDirName The destination directory name\n       * @returns {Promise<DirectoryEntry|Entry>} Returns a Promise that resolves to the new DirectoryEntry object or rejects with an error.\n       */\n    File.prototype.moveDir = /**\n       * Move a directory to a given path.\n       *\n       * @param {string} path The source path to the directory\n       * @param {string} dirName The source directory name\n       * @param {string} newPath The destination path to the directory\n       * @param {string} newDirName The destination directory name\n       * @returns {Promise<DirectoryEntry|Entry>} Returns a Promise that resolves to the new DirectoryEntry object or rejects with an error.\n       */\n    function (path, dirName, newPath, newDirName) {\n        var _this = this;\n        newDirName = newDirName || dirName;\n        if (/^\\//.test(newDirName)) {\n            var err = new FileError(5);\n            err.message = 'directory cannot start with /';\n            return Promise.reject(err);\n        }\n        return this.resolveDirectoryUrl(path)\n            .then(function (fse) {\n            return _this.getDirectory(fse, dirName, { create: false });\n        })\n            .then(function (srcde) {\n            return _this.resolveDirectoryUrl(newPath).then(function (destenation) {\n                return _this.move(srcde, destenation, newDirName);\n            });\n        });\n    };\n    /**\n     * Copy a directory in various methods. If destination directory exists, will fail to copy.\n     *\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} dirName Name of directory to copy\n     * @param {string} newPath Base FileSystem of new location\n     * @param {string} newDirName New name of directory to copy to (leave blank to remain the same)\n     * @returns {Promise<Entry>} Returns a Promise that resolves to the new Entry object or rejects with an error.\n     */\n    /**\n       * Copy a directory in various methods. If destination directory exists, will fail to copy.\n       *\n       * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\n       * @param {string} dirName Name of directory to copy\n       * @param {string} newPath Base FileSystem of new location\n       * @param {string} newDirName New name of directory to copy to (leave blank to remain the same)\n       * @returns {Promise<Entry>} Returns a Promise that resolves to the new Entry object or rejects with an error.\n       */\n    File.prototype.copyDir = /**\n       * Copy a directory in various methods. If destination directory exists, will fail to copy.\n       *\n       * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\n       * @param {string} dirName Name of directory to copy\n       * @param {string} newPath Base FileSystem of new location\n       * @param {string} newDirName New name of directory to copy to (leave blank to remain the same)\n       * @returns {Promise<Entry>} Returns a Promise that resolves to the new Entry object or rejects with an error.\n       */\n    function (path, dirName, newPath, newDirName) {\n        var _this = this;\n        if (/^\\//.test(newDirName)) {\n            var err = new FileError(5);\n            err.message = 'directory cannot start with /';\n            return Promise.reject(err);\n        }\n        return this.resolveDirectoryUrl(path)\n            .then(function (fse) {\n            return _this.getDirectory(fse, dirName, { create: false });\n        })\n            .then(function (srcde) {\n            return _this.resolveDirectoryUrl(newPath).then(function (deste) {\n                return _this.copy(srcde, deste, newDirName);\n            });\n        });\n    };\n    /**\n     * List files and directory from a given path.\n     *\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} dirName Name of directory\n     * @returns {Promise<Entry[]>} Returns a Promise that resolves to an array of Entry objects or rejects with an error.\n     */\n    /**\n       * List files and directory from a given path.\n       *\n       * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\n       * @param {string} dirName Name of directory\n       * @returns {Promise<Entry[]>} Returns a Promise that resolves to an array of Entry objects or rejects with an error.\n       */\n    File.prototype.listDir = /**\n       * List files and directory from a given path.\n       *\n       * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\n       * @param {string} dirName Name of directory\n       * @returns {Promise<Entry[]>} Returns a Promise that resolves to an array of Entry objects or rejects with an error.\n       */\n    function (path, dirName) {\n        var _this = this;\n        if (/^\\//.test(dirName)) {\n            var err = new FileError(5);\n            err.message = 'directory cannot start with /';\n            return Promise.reject(err);\n        }\n        return this.resolveDirectoryUrl(path)\n            .then(function (fse) {\n            return _this.getDirectory(fse, dirName, {\n                create: false,\n                exclusive: false\n            });\n        })\n            .then(function (de) {\n            var reader = de.createReader();\n            return _this.readEntries(reader);\n        });\n    };\n    /**\n     * Removes all files and the directory from a desired location.\n     *\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystem above\n     * @param {string} dirName Name of directory\n     * @returns {Promise<RemoveResult>} Returns a Promise that resolves with a RemoveResult or rejects with an error.\n     */\n    /**\n       * Removes all files and the directory from a desired location.\n       *\n       * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystem above\n       * @param {string} dirName Name of directory\n       * @returns {Promise<RemoveResult>} Returns a Promise that resolves with a RemoveResult or rejects with an error.\n       */\n    File.prototype.removeRecursively = /**\n       * Removes all files and the directory from a desired location.\n       *\n       * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystem above\n       * @param {string} dirName Name of directory\n       * @returns {Promise<RemoveResult>} Returns a Promise that resolves with a RemoveResult or rejects with an error.\n       */\n    function (path, dirName) {\n        var _this = this;\n        if (/^\\//.test(dirName)) {\n            var err = new FileError(5);\n            err.message = 'directory cannot start with /';\n            return Promise.reject(err);\n        }\n        return this.resolveDirectoryUrl(path)\n            .then(function (fse) {\n            return _this.getDirectory(fse, dirName, { create: false });\n        })\n            .then(function (de) {\n            return _this.rimraf(de);\n        });\n    };\n    /**\n     * Check if a file exists in a certain path, directory.\n     *\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystem above\n     * @param {string} file Name of file to check\n     * @returns {Promise<boolean>} Returns a Promise that resolves with a boolean or rejects with an error.\n     */\n    /**\n       * Check if a file exists in a certain path, directory.\n       *\n       * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystem above\n       * @param {string} file Name of file to check\n       * @returns {Promise<boolean>} Returns a Promise that resolves with a boolean or rejects with an error.\n       */\n    File.prototype.checkFile = /**\n       * Check if a file exists in a certain path, directory.\n       *\n       * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystem above\n       * @param {string} file Name of file to check\n       * @returns {Promise<boolean>} Returns a Promise that resolves with a boolean or rejects with an error.\n       */\n    function (path, file) {\n        if (/^\\//.test(file)) {\n            var err = new FileError(5);\n            err.message = 'file cannot start with /';\n            return Promise.reject(err);\n        }\n        return this.resolveLocalFilesystemUrl(path + file).then(function (fse) {\n            if (fse.isFile) {\n                return true;\n            }\n            else {\n                var err = new FileError(13);\n                err.message = 'input is not a file';\n                return Promise.reject(err);\n            }\n        });\n    };\n    /**\n     * Creates a new file in the specific path.\n     * The replace boolean value determines whether to replace an existing file with the same name.\n     * If an existing file exists and the replace value is false, the promise will fail and return an error.\n     *\n     * @param {string} path  Base FileSystem. Please refer to the iOS and Android filesystem above\n     * @param {string} fileName Name of file to create\n     * @param {boolean} replace If true, replaces file with same name. If false returns error\n     * @returns {Promise<FileEntry>} Returns a Promise that resolves to a FileEntry or rejects with an error.\n     */\n    /**\n       * Creates a new file in the specific path.\n       * The replace boolean value determines whether to replace an existing file with the same name.\n       * If an existing file exists and the replace value is false, the promise will fail and return an error.\n       *\n       * @param {string} path  Base FileSystem. Please refer to the iOS and Android filesystem above\n       * @param {string} fileName Name of file to create\n       * @param {boolean} replace If true, replaces file with same name. If false returns error\n       * @returns {Promise<FileEntry>} Returns a Promise that resolves to a FileEntry or rejects with an error.\n       */\n    File.prototype.createFile = /**\n       * Creates a new file in the specific path.\n       * The replace boolean value determines whether to replace an existing file with the same name.\n       * If an existing file exists and the replace value is false, the promise will fail and return an error.\n       *\n       * @param {string} path  Base FileSystem. Please refer to the iOS and Android filesystem above\n       * @param {string} fileName Name of file to create\n       * @param {boolean} replace If true, replaces file with same name. If false returns error\n       * @returns {Promise<FileEntry>} Returns a Promise that resolves to a FileEntry or rejects with an error.\n       */\n    function (path, fileName, replace) {\n        var _this = this;\n        if (/^\\//.test(fileName)) {\n            var err = new FileError(5);\n            err.message = 'file-name cannot start with /';\n            return Promise.reject(err);\n        }\n        var options = {\n            create: true\n        };\n        if (!replace) {\n            options.exclusive = true;\n        }\n        return this.resolveDirectoryUrl(path).then(function (fse) {\n            return _this.getFile(fse, fileName, options);\n        });\n    };\n    /**\n     * Removes a file from a desired location.\n     *\n     * @param {string} path  Base FileSystem. Please refer to the iOS and Android filesystem above\n     * @param {string} fileName Name of file to remove\n     * @returns {Promise<RemoveResult>} Returns a Promise that resolves to a RemoveResult or rejects with an error.\n     */\n    /**\n       * Removes a file from a desired location.\n       *\n       * @param {string} path  Base FileSystem. Please refer to the iOS and Android filesystem above\n       * @param {string} fileName Name of file to remove\n       * @returns {Promise<RemoveResult>} Returns a Promise that resolves to a RemoveResult or rejects with an error.\n       */\n    File.prototype.removeFile = /**\n       * Removes a file from a desired location.\n       *\n       * @param {string} path  Base FileSystem. Please refer to the iOS and Android filesystem above\n       * @param {string} fileName Name of file to remove\n       * @returns {Promise<RemoveResult>} Returns a Promise that resolves to a RemoveResult or rejects with an error.\n       */\n    function (path, fileName) {\n        var _this = this;\n        if (/^\\//.test(fileName)) {\n            var err = new FileError(5);\n            err.message = 'file-name cannot start with /';\n            return Promise.reject(err);\n        }\n        return this.resolveDirectoryUrl(path)\n            .then(function (fse) {\n            return _this.getFile(fse, fileName, { create: false });\n        })\n            .then(function (fe) {\n            return _this.remove(fe);\n        });\n    };\n    /**\n     * Write a new file to the desired location.\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystem above\n     * @param {string} fileName path relative to base path\n     * @param {string | Blob | ArrayBuffer} text content, blob or ArrayBuffer to write\n     * @param {IWriteOptions} whether to replace/append to an existing file. See IWriteOptions for more information.\n     * @returns {Promise<any>} Returns a Promise that resolves to updated file entry or rejects with an error.\n     */\n    /**\n       * Write a new file to the desired location.\n       * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystem above\n       * @param {string} fileName path relative to base path\n       * @param {string | Blob | ArrayBuffer} text content, blob or ArrayBuffer to write\n       * @param {IWriteOptions} whether to replace/append to an existing file. See IWriteOptions for more information.\n       * @returns {Promise<any>} Returns a Promise that resolves to updated file entry or rejects with an error.\n       */\n    File.prototype.writeFile = /**\n       * Write a new file to the desired location.\n       * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystem above\n       * @param {string} fileName path relative to base path\n       * @param {string | Blob | ArrayBuffer} text content, blob or ArrayBuffer to write\n       * @param {IWriteOptions} whether to replace/append to an existing file. See IWriteOptions for more information.\n       * @returns {Promise<any>} Returns a Promise that resolves to updated file entry or rejects with an error.\n       */\n    function (path, fileName, text, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        if (/^\\//.test(fileName)) {\n            var err = new FileError(5);\n            err.message = 'file-name cannot start with /';\n            return Promise.reject(err);\n        }\n        var getFileOpts = {\n            create: !options.append,\n            exclusive: !options.replace\n        };\n        return this.resolveDirectoryUrl(path)\n            .then(function (directoryEntry) {\n            return _this.getFile(directoryEntry, fileName, getFileOpts);\n        })\n            .then(function (fileEntry) {\n            return _this.writeFileEntry(fileEntry, text, options);\n        });\n    };\n    /**\n     * Write content to FileEntry.\n     * @hidden\n     * @param {FileEntry} fe file entry object\n     * @param {string | Blob} text content or blob to write\n     * @param {IWriteOptions} options replace file if set to true. See WriteOptions for more information.\n     * @returns {Promise<FileEntry>} Returns a Promise that resolves to updated file entry or rejects with an error.\n     */\n    /**\n       * Write content to FileEntry.\n       * @hidden\n       * @param {FileEntry} fe file entry object\n       * @param {string | Blob} text content or blob to write\n       * @param {IWriteOptions} options replace file if set to true. See WriteOptions for more information.\n       * @returns {Promise<FileEntry>} Returns a Promise that resolves to updated file entry or rejects with an error.\n       */\n    File.prototype.writeFileEntry = /**\n       * Write content to FileEntry.\n       * @hidden\n       * @param {FileEntry} fe file entry object\n       * @param {string | Blob} text content or blob to write\n       * @param {IWriteOptions} options replace file if set to true. See WriteOptions for more information.\n       * @returns {Promise<FileEntry>} Returns a Promise that resolves to updated file entry or rejects with an error.\n       */\n    function (fe, text, options) {\n        var _this = this;\n        return this.createWriter(fe)\n            .then(function (writer) {\n            if (options.append) {\n                writer.seek(writer.length);\n            }\n            if (options.truncate) {\n                writer.truncate(options.truncate);\n            }\n            return _this.write(writer, text);\n        })\n            .then(function () { return fe; });\n    };\n    /**\n     * Write to an existing file.\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystem above\n     * @param {string} fileName path relative to base path\n     * @param {string | Blob} text content or blob to write\n     * @returns {Promise<void>} Returns a Promise that resolves or rejects with an error.\n     */\n    /**\n       * Write to an existing file.\n       * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystem above\n       * @param {string} fileName path relative to base path\n       * @param {string | Blob} text content or blob to write\n       * @returns {Promise<void>} Returns a Promise that resolves or rejects with an error.\n       */\n    File.prototype.writeExistingFile = /**\n       * Write to an existing file.\n       * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystem above\n       * @param {string} fileName path relative to base path\n       * @param {string | Blob} text content or blob to write\n       * @returns {Promise<void>} Returns a Promise that resolves or rejects with an error.\n       */\n    function (path, fileName, text) {\n        return this.writeFile(path, fileName, text, { replace: true });\n    };\n    /**\n     * Read the contents of a file as text.\n     *\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystem above\n     * @param {string} file Name of file, relative to path.\n     * @returns {Promise<string>} Returns a Promise that resolves with the contents of the file as string or rejects with an error.\n     */\n    /**\n       * Read the contents of a file as text.\n       *\n       * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystem above\n       * @param {string} file Name of file, relative to path.\n       * @returns {Promise<string>} Returns a Promise that resolves with the contents of the file as string or rejects with an error.\n       */\n    File.prototype.readAsText = /**\n       * Read the contents of a file as text.\n       *\n       * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystem above\n       * @param {string} file Name of file, relative to path.\n       * @returns {Promise<string>} Returns a Promise that resolves with the contents of the file as string or rejects with an error.\n       */\n    function (path, file) {\n        return this.readFile(path, file, 'Text');\n    };\n    /**\n     * Read file and return data as a base64 encoded data url.\n     * A data url is of the form:\n     *      data: [<mediatype>][;base64],<data>\n     *\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystem above\n     * @param {string} file Name of file, relative to path.\n     * @returns {Promise<string>} Returns a Promise that resolves with the contents of the file as data URL or rejects with an error.\n     */\n    /**\n       * Read file and return data as a base64 encoded data url.\n       * A data url is of the form:\n       *      data: [<mediatype>][;base64],<data>\n       *\n       * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystem above\n       * @param {string} file Name of file, relative to path.\n       * @returns {Promise<string>} Returns a Promise that resolves with the contents of the file as data URL or rejects with an error.\n       */\n    File.prototype.readAsDataURL = /**\n       * Read file and return data as a base64 encoded data url.\n       * A data url is of the form:\n       *      data: [<mediatype>][;base64],<data>\n       *\n       * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystem above\n       * @param {string} file Name of file, relative to path.\n       * @returns {Promise<string>} Returns a Promise that resolves with the contents of the file as data URL or rejects with an error.\n       */\n    function (path, file) {\n        return this.readFile(path, file, 'DataURL');\n    };\n    /**\n     * Read file and return data as a binary data.\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystem above\n     * @param {string} file Name of file, relative to path.\n     * @returns {Promise<string>} Returns a Promise that resolves with the contents of the file as string rejects with an error.\n     */\n    /**\n       * Read file and return data as a binary data.\n       * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystem above\n       * @param {string} file Name of file, relative to path.\n       * @returns {Promise<string>} Returns a Promise that resolves with the contents of the file as string rejects with an error.\n       */\n    File.prototype.readAsBinaryString = /**\n       * Read file and return data as a binary data.\n       * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystem above\n       * @param {string} file Name of file, relative to path.\n       * @returns {Promise<string>} Returns a Promise that resolves with the contents of the file as string rejects with an error.\n       */\n    function (path, file) {\n        return this.readFile(path, file, 'BinaryString');\n    };\n    /**\n     * Read file and return data as an ArrayBuffer.\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystem above\n     * @param {string} file Name of file, relative to path.\n     * @returns {Promise<ArrayBuffer>} Returns a Promise that resolves with the contents of the file as ArrayBuffer or rejects with an error.\n     */\n    /**\n       * Read file and return data as an ArrayBuffer.\n       * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystem above\n       * @param {string} file Name of file, relative to path.\n       * @returns {Promise<ArrayBuffer>} Returns a Promise that resolves with the contents of the file as ArrayBuffer or rejects with an error.\n       */\n    File.prototype.readAsArrayBuffer = /**\n       * Read file and return data as an ArrayBuffer.\n       * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystem above\n       * @param {string} file Name of file, relative to path.\n       * @returns {Promise<ArrayBuffer>} Returns a Promise that resolves with the contents of the file as ArrayBuffer or rejects with an error.\n       */\n    function (path, file) {\n        return this.readFile(path, file, 'ArrayBuffer');\n    };\n    File.prototype.readFile = function (path, file, readAs) {\n        var _this = this;\n        if (/^\\//.test(file)) {\n            var err = new FileError(5);\n            err.message = 'file-name cannot start with /';\n            return Promise.reject(err);\n        }\n        return this.resolveDirectoryUrl(path)\n            .then(function (directoryEntry) {\n            return _this.getFile(directoryEntry, file, { create: false });\n        })\n            .then(function (fileEntry) {\n            var reader = new FileReader();\n            return new Promise(function (resolve, reject) {\n                reader.onloadend = function () {\n                    if (reader.result !== undefined || reader.result !== null) {\n                        resolve(reader.result);\n                    }\n                    else if (reader.error !== undefined || reader.error !== null) {\n                        reject(reader.error);\n                    }\n                    else {\n                        reject({ code: null, message: 'READER_ONLOADEND_ERR' });\n                    }\n                };\n                fileEntry.file(function (file) {\n                    reader[\"readAs\" + readAs].call(reader, file);\n                }, function (error) {\n                    reject(error);\n                });\n            });\n        });\n    };\n    /**\n     * Move a file to a given path.\n     *\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystem above\n     * @param {string} fileName Name of file to move\n     * @param {string} newPath Base FileSystem of new location\n     * @param {string} newFileName New name of file to move to (leave blank to remain the same)\n     * @returns {Promise<Entry>} Returns a Promise that resolves to the new Entry or rejects with an error.\n     */\n    /**\n       * Move a file to a given path.\n       *\n       * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystem above\n       * @param {string} fileName Name of file to move\n       * @param {string} newPath Base FileSystem of new location\n       * @param {string} newFileName New name of file to move to (leave blank to remain the same)\n       * @returns {Promise<Entry>} Returns a Promise that resolves to the new Entry or rejects with an error.\n       */\n    File.prototype.moveFile = /**\n       * Move a file to a given path.\n       *\n       * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystem above\n       * @param {string} fileName Name of file to move\n       * @param {string} newPath Base FileSystem of new location\n       * @param {string} newFileName New name of file to move to (leave blank to remain the same)\n       * @returns {Promise<Entry>} Returns a Promise that resolves to the new Entry or rejects with an error.\n       */\n    function (path, fileName, newPath, newFileName) {\n        var _this = this;\n        newFileName = newFileName || fileName;\n        if (/^\\//.test(newFileName)) {\n            var err = new FileError(5);\n            err.message = 'file name cannot start with /';\n            return Promise.reject(err);\n        }\n        return this.resolveDirectoryUrl(path)\n            .then(function (fse) {\n            return _this.getFile(fse, fileName, { create: false });\n        })\n            .then(function (srcfe) {\n            return _this.resolveDirectoryUrl(newPath).then(function (deste) {\n                return _this.move(srcfe, deste, newFileName);\n            });\n        });\n    };\n    /**\n     * Copy a file in various methods. If file exists, will fail to copy.\n     *\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystem above\n     * @param {string} fileName Name of file to copy\n     * @param {string} newPath Base FileSystem of new location\n     * @param {string} newFileName New name of file to copy to (leave blank to remain the same)\n     * @returns {Promise<Entry>} Returns a Promise that resolves to an Entry or rejects with an error.\n     */\n    /**\n       * Copy a file in various methods. If file exists, will fail to copy.\n       *\n       * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystem above\n       * @param {string} fileName Name of file to copy\n       * @param {string} newPath Base FileSystem of new location\n       * @param {string} newFileName New name of file to copy to (leave blank to remain the same)\n       * @returns {Promise<Entry>} Returns a Promise that resolves to an Entry or rejects with an error.\n       */\n    File.prototype.copyFile = /**\n       * Copy a file in various methods. If file exists, will fail to copy.\n       *\n       * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystem above\n       * @param {string} fileName Name of file to copy\n       * @param {string} newPath Base FileSystem of new location\n       * @param {string} newFileName New name of file to copy to (leave blank to remain the same)\n       * @returns {Promise<Entry>} Returns a Promise that resolves to an Entry or rejects with an error.\n       */\n    function (path, fileName, newPath, newFileName) {\n        var _this = this;\n        newFileName = newFileName || fileName;\n        if (/^\\//.test(newFileName)) {\n            var err = new FileError(5);\n            err.message = 'file name cannot start with /';\n            return Promise.reject(err);\n        }\n        return this.resolveDirectoryUrl(path)\n            .then(function (fse) {\n            return _this.getFile(fse, fileName, { create: false });\n        })\n            .then(function (srcfe) {\n            return _this.resolveDirectoryUrl(newPath).then(function (deste) {\n                return _this.copy(srcfe, deste, newFileName);\n            });\n        });\n    };\n    /**\n     * @hidden\n     */\n    /**\n       * @hidden\n       */\n    File.prototype.fillErrorMessage = /**\n       * @hidden\n       */\n    function (err) {\n        try {\n            err.message = this.cordovaFileError[err.code];\n        }\n        catch (e) { }\n    };\n    /**\n     * Resolves a local file system URL\n     * @param fileUrl {string} file system url\n     * @returns {Promise<Entry>}\n     */\n    /**\n       * Resolves a local file system URL\n       * @param fileUrl {string} file system url\n       * @returns {Promise<Entry>}\n       */\n    File.prototype.resolveLocalFilesystemUrl = /**\n       * Resolves a local file system URL\n       * @param fileUrl {string} file system url\n       * @returns {Promise<Entry>}\n       */\n    function (fileUrl) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            try {\n                window.resolveLocalFileSystemURL(fileUrl, function (entry) {\n                    resolve(entry);\n                }, function (err) {\n                    _this.fillErrorMessage(err);\n                    reject(err);\n                });\n            }\n            catch (xc) {\n                _this.fillErrorMessage(xc);\n                reject(xc);\n            }\n        });\n    };\n    /**\n     * Resolves a local directory url\n     * @param directoryUrl {string} directory system url\n     * @returns {Promise<DirectoryEntry>}\n     */\n    /**\n       * Resolves a local directory url\n       * @param directoryUrl {string} directory system url\n       * @returns {Promise<DirectoryEntry>}\n       */\n    File.prototype.resolveDirectoryUrl = /**\n       * Resolves a local directory url\n       * @param directoryUrl {string} directory system url\n       * @returns {Promise<DirectoryEntry>}\n       */\n    function (directoryUrl) {\n        return this.resolveLocalFilesystemUrl(directoryUrl).then(function (de) {\n            if (de.isDirectory) {\n                return de;\n            }\n            else {\n                var err = new FileError(13);\n                err.message = 'input is not a directory';\n                return Promise.reject(err);\n            }\n        });\n    };\n    /**\n     * Get a directory\n     * @param directoryEntry {DirectoryEntry} Directory entry, obtained by resolveDirectoryUrl method\n     * @param directoryName {string} Directory name\n     * @param flags {Flags} Options\n     * @returns {Promise<DirectoryEntry>}\n     */\n    /**\n       * Get a directory\n       * @param directoryEntry {DirectoryEntry} Directory entry, obtained by resolveDirectoryUrl method\n       * @param directoryName {string} Directory name\n       * @param flags {Flags} Options\n       * @returns {Promise<DirectoryEntry>}\n       */\n    File.prototype.getDirectory = /**\n       * Get a directory\n       * @param directoryEntry {DirectoryEntry} Directory entry, obtained by resolveDirectoryUrl method\n       * @param directoryName {string} Directory name\n       * @param flags {Flags} Options\n       * @returns {Promise<DirectoryEntry>}\n       */\n    function (directoryEntry, directoryName, flags) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            try {\n                directoryEntry.getDirectory(directoryName, flags, function (de) {\n                    resolve(de);\n                }, function (err) {\n                    _this.fillErrorMessage(err);\n                    reject(err);\n                });\n            }\n            catch (xc) {\n                _this.fillErrorMessage(xc);\n                reject(xc);\n            }\n        });\n    };\n    /**\n     * Get a file\n     * @param directoryEntry {DirectoryEntry} Directory entry, obtained by resolveDirectoryUrl method\n     * @param fileName {string} File name\n     * @param flags {Flags} Options\n     * @returns {Promise<FileEntry>}\n     */\n    /**\n       * Get a file\n       * @param directoryEntry {DirectoryEntry} Directory entry, obtained by resolveDirectoryUrl method\n       * @param fileName {string} File name\n       * @param flags {Flags} Options\n       * @returns {Promise<FileEntry>}\n       */\n    File.prototype.getFile = /**\n       * Get a file\n       * @param directoryEntry {DirectoryEntry} Directory entry, obtained by resolveDirectoryUrl method\n       * @param fileName {string} File name\n       * @param flags {Flags} Options\n       * @returns {Promise<FileEntry>}\n       */\n    function (directoryEntry, fileName, flags) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            try {\n                directoryEntry.getFile(fileName, flags, resolve, function (err) {\n                    _this.fillErrorMessage(err);\n                    reject(err);\n                });\n            }\n            catch (xc) {\n                _this.fillErrorMessage(xc);\n                reject(xc);\n            }\n        });\n    };\n    /**\n     * @hidden\n     */\n    /**\n       * @hidden\n       */\n    File.prototype.remove = /**\n       * @hidden\n       */\n    function (fe) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            fe.remove(function () {\n                resolve({ success: true, fileRemoved: fe });\n            }, function (err) {\n                _this.fillErrorMessage(err);\n                reject(err);\n            });\n        });\n    };\n    /**\n     * @hidden\n     */\n    /**\n       * @hidden\n       */\n    File.prototype.move = /**\n       * @hidden\n       */\n    function (srce, destdir, newName) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            srce.moveTo(destdir, newName, function (deste) {\n                resolve(deste);\n            }, function (err) {\n                _this.fillErrorMessage(err);\n                reject(err);\n            });\n        });\n    };\n    /**\n     * @hidden\n     */\n    /**\n       * @hidden\n       */\n    File.prototype.copy = /**\n       * @hidden\n       */\n    function (srce, destdir, newName) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            srce.copyTo(destdir, newName, function (deste) {\n                resolve(deste);\n            }, function (err) {\n                _this.fillErrorMessage(err);\n                reject(err);\n            });\n        });\n    };\n    /**\n     * @hidden\n     */\n    /**\n       * @hidden\n       */\n    File.prototype.readEntries = /**\n       * @hidden\n       */\n    function (dr) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            dr.readEntries(function (entries) {\n                resolve(entries);\n            }, function (err) {\n                _this.fillErrorMessage(err);\n                reject(err);\n            });\n        });\n    };\n    /**\n     * @hidden\n     */\n    /**\n       * @hidden\n       */\n    File.prototype.rimraf = /**\n       * @hidden\n       */\n    function (de) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            de.removeRecursively(function () {\n                resolve({ success: true, fileRemoved: de });\n            }, function (err) {\n                _this.fillErrorMessage(err);\n                reject(err);\n            });\n        });\n    };\n    /**\n     * @hidden\n     */\n    /**\n       * @hidden\n       */\n    File.prototype.createWriter = /**\n       * @hidden\n       */\n    function (fe) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            fe.createWriter(function (writer) {\n                resolve(writer);\n            }, function (err) {\n                _this.fillErrorMessage(err);\n                reject(err);\n            });\n        });\n    };\n    /**\n     * @hidden\n     */\n    /**\n       * @hidden\n       */\n    File.prototype.write = /**\n       * @hidden\n       */\n    function (writer, gu) {\n        if (gu instanceof Blob) {\n            return this.writeFileInChunks(writer, gu);\n        }\n        return new Promise(function (resolve, reject) {\n            writer.onwriteend = function (evt) {\n                if (writer.error) {\n                    reject(writer.error);\n                }\n                else {\n                    resolve(evt);\n                }\n            };\n            writer.write(gu);\n        });\n    };\n    /**\n     * @hidden\n     */\n    /**\n       * @hidden\n       */\n    File.prototype.writeFileInChunks = /**\n       * @hidden\n       */\n    function (writer, file) {\n        var BLOCK_SIZE = 1024 * 1024;\n        var writtenSize = 0;\n        function writeNextChunk() {\n            var size = Math.min(BLOCK_SIZE, file.size - writtenSize);\n            var chunk = file.slice(writtenSize, writtenSize + size);\n            writtenSize += size;\n            writer.write(chunk);\n        }\n        return new Promise(function (resolve, reject) {\n            writer.onerror = reject;\n            writer.onwrite = function () {\n                if (writtenSize < file.size) {\n                    writeNextChunk();\n                }\n                else {\n                    resolve();\n                }\n            };\n            writeNextChunk();\n        });\n    };\n    File.decorators = [\n        { type: Injectable },\n    ];\n    __decorate([\n        CordovaProperty,\n        __metadata(\"design:type\", String)\n    ], File.prototype, \"applicationDirectory\", void 0);\n    __decorate([\n        CordovaProperty,\n        __metadata(\"design:type\", String)\n    ], File.prototype, \"applicationStorageDirectory\", void 0);\n    __decorate([\n        CordovaProperty,\n        __metadata(\"design:type\", String)\n    ], File.prototype, \"dataDirectory\", void 0);\n    __decorate([\n        CordovaProperty,\n        __metadata(\"design:type\", String)\n    ], File.prototype, \"cacheDirectory\", void 0);\n    __decorate([\n        CordovaProperty,\n        __metadata(\"design:type\", String)\n    ], File.prototype, \"externalApplicationStorageDirectory\", void 0);\n    __decorate([\n        CordovaProperty,\n        __metadata(\"design:type\", String)\n    ], File.prototype, \"externalDataDirectory\", void 0);\n    __decorate([\n        CordovaProperty,\n        __metadata(\"design:type\", String)\n    ], File.prototype, \"externalCacheDirectory\", void 0);\n    __decorate([\n        CordovaProperty,\n        __metadata(\"design:type\", String)\n    ], File.prototype, \"externalRootDirectory\", void 0);\n    __decorate([\n        CordovaProperty,\n        __metadata(\"design:type\", String)\n    ], File.prototype, \"tempDirectory\", void 0);\n    __decorate([\n        CordovaProperty,\n        __metadata(\"design:type\", String)\n    ], File.prototype, \"syncedDataDirectory\", void 0);\n    __decorate([\n        CordovaProperty,\n        __metadata(\"design:type\", String)\n    ], File.prototype, \"documentsDirectory\", void 0);\n    __decorate([\n        CordovaProperty,\n        __metadata(\"design:type\", String)\n    ], File.prototype, \"sharedDirectory\", void 0);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"getFreeDiskSpace\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"checkDir\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String, Boolean]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"createDir\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"removeDir\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String, String, String]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"moveDir\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String, String, String]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"copyDir\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"listDir\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"removeRecursively\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"checkFile\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String, Boolean]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"createFile\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"removeFile\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String, Object, Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"writeFile\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String, Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"writeExistingFile\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"readAsText\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"readAsDataURL\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"readAsBinaryString\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"readAsArrayBuffer\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String, String, String]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"moveFile\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String, String, String]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"copyFile\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"resolveLocalFilesystemUrl\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"resolveDirectoryUrl\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, String, Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"getDirectory\", null);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, String, Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], File.prototype, \"getFile\", null);\n    /**\n     * @name File\n     * @description\n     * This plugin implements a File API allowing read/write access to files residing on the device.\n     *\n     * The File class implements static convenience functions to access files and directories.\n     *\n     * Example:\n     * ```\n     * import { File } from '@ionic-native/file';\n     *\n     * constructor(private file: File) { }\n     *\n     * ...\n     *\n     * this.file.checkDir(this.file.dataDirectory, 'mydir').then(_ => console.log('Directory exists')).catch(err => console.log('Directory doesn\\'t exist'));\n     *\n     * ```\n     *\n     *  This plugin is based on several specs, including : The HTML5 File API http: //www.w3.org/TR/FileAPI/\n     *  The (now-defunct) Directories and System extensions Latest: http: //www.w3.org/TR/2012/WD-file-system-api-20120417/\n     *  Although most of the plugin code was written when an earlier spec was current: http: //www.w3.org/TR/2011/WD-file-system-api-20110419/\n     *  It also implements the FileWriter spec : http: //dev.w3.org/2009/dap/file-system/file-writer.html\n     *  @interfaces\n     *  IFile\n     *  Entry\n     *  DirectoryEntry\n     *  DirectoryReader\n     *  FileSystem\n     */\n    File = __decorate([\n        Plugin({\n            pluginName: 'File',\n            plugin: 'cordova-plugin-file',\n            pluginRef: 'cordova.file',\n            repo: 'https://github.com/apache/cordova-plugin-file',\n            platforms: ['Android', 'Browser', 'iOS', 'macOS', 'Windows']\n        })\n    ], File);\n    return File;\n}(IonicNativePlugin));\nexport { File };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/file/index.js\n// module id = 924\n// module chunks = 2 3 4 5 6 7","import { Component } from '@angular/core';\nimport { IonicPage,NavParams, ModalController, Events, NavController, Platform, LoadingController, Loading, ActionSheetController, ToastController, AlertCmp, AlertController, Nav } from 'ionic-angular';\nimport { UserProvider } from '../../providers/user/user';\nimport { Subscription } from 'rxjs';\n\n\n\n\ndeclare var cordova: any;\n\n@IonicPage({\n  name: 'page-confirm',\n  segment: 'confirm'\n})\n\n@Component({\n  selector: 'page-confirm',\n  templateUrl: 'confirmpage.html'\n})\n\nexport class ConfirmPage {\n data :any;\n address:any;\n\n\n  constructor(public navCtrl: NavController, public params:NavParams, public user: UserProvider, public alertCtrl: AlertController, public toast: ToastController) {\n    this.data = this.params.get('data');\n\n    console.log(\"datasssss\",this.data);\n    this.address = this.data.address;\n    console.log(\"DBX Address\", this.address);\n\n  }\n\n\n  order(){\n    this.user.confirm_node().subscribe(\n      data =>{\n        console.log(data);\n        let datas = JSON.parse(JSON.stringify(data));\n        let data2 = JSON.parse(datas._body);\n        if(data2.success){\n\n          let toast = this.toast.create({\n            message: 'Your new mining node has been activated. You are now eligible to earn DBX whenever this node mines a block.',\n            duration: 3000,\n            position: 'top'\n          });\n\n          toast.onDidDismiss(() => {\n            console.log('Dismissed toast');\n            this.navCtrl.setRoot('page-advance');\n\n\n          });\n\n          toast.present();\n\n         \n\n\n        }\n        else{\n          let toast = this.toast.create({\n            message: 'Something went wrong in the node activation process. The server says: \"+message',\n            duration: 3000,\n            position: 'top'\n          });\n\n          toast.onDidDismiss(() => {\n            console.log('Dismissed toast');\n           \n\n\n          });\n\n        }\n      },error => {\n\t\t\t\tconsole.log(error.JSON);\n\t\t\t\tsetTimeout(() => {\n\t      this.navCtrl.setRoot('page-general_error');\n\t\t\t\t  }, 1000);\n\t\t\t},\n    )\n  }\n\n  \n\n}\n\n\n\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/confirmpage/confirmpage.ts"],"sourceRoot":""}