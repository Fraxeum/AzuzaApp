{"version":3,"sources":["../../src/pages/property-detail-list/property-detail-list.module.ts","../../node_modules/@ionic-native/core/index.js","../../node_modules/@ionic-native/core/util.js","../../node_modules/@ionic-native/core/plugin.js","../../node_modules/rxjs/observable/fromEvent.js","../../node_modules/rxjs-compat/observable/fromEvent.js","../../node_modules/@ionic-native/core/bootstrap.js","../../node_modules/@ionic-native/core/decorators.js","../../node_modules/rxjs/observable/throw.js","../../node_modules/rxjs-compat/observable/throw.js","../../node_modules/@ionic-native/core/ionic-native-plugin.js","../../node_modules/@ionic-native/in-app-browser/index.js","../../src/pages/property-detail-list/property-detail-list.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACO;AAChD,0DAA0D;AAEM;AACJ;AAEL;AAEZ;AAe3C;IAAA;IAAsC,CAAC;IAA1B,sBAAsB;QAblC,+DAAQ,CAAC;YACT,YAAY,EAAE;gBACb,qFAAsB;aACtB;YACD,OAAO,EAAE;gBACR,8DAAe,CAAC,QAAQ,CAAC,qFAAsB,CAAC,EAAE,iEAAU;aAC5D;YACD,OAAO,EAAE;gBACR,qFAAsB;aACtB;YACD,SAAS,EAAC,CAAC,kFAAY,EAAE,0EAAY,CAAC;SACtC,CAAC;OAEW,sBAAsB,CAAI;IAAD,6BAAC;CAAA;AAAJ;;;;;;;;;ACxBnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyB;AACI;AACN;AACe;AACtC,iC;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACO;AACP;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;AC7EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACS;AACb;AAC+B;AACxE,sEAAU;AACV;AACA;AACO,iCAAiC;AACjC,gCAAgC;AAChC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gEAAS;AAC9B;AACA;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA,QAAQ,iEAAU;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA;AACA,6BAA6B,gEAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,WAAW;AACrC;AACA,YAAY,iEAAU;AACtB;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA,aAAa;AACb;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,6BAA6B,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA,0BAA0B,WAAW;AACrC,WAAW,iEAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4BAA4B;AAChD;AACA,KAAK;AACL;AACA;AACA,0BAA0B,WAAW;AACrC,eAAe,2DAAU;AACzB;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA,aAAa;AACb;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACO;AACP,6BAA6B,kBAAkB;AAC/C,WAAW,4EAAS;AACpB;AACA;AACA;AACA,kEAAkE,MAAM;AACxE;AACA;AACA;AACA;AACA;AACO;AACP,0BAA0B,WAAW;AACrC,eAAe,2DAAU;AACzB;AACA;AACA,mCAAmC,gEAAS;AAC5C;AACA,gCAAgC,qDAAqD,EAAE,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACO;AACP,0BAA0B,WAAW;AACrC;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,0BAA0B,WAAW;AACrC;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,2DAAU;AACjC;AACA;AACA;AACA;AACA,wCAAwC,uBAAuB;AAC/D;AACA;AACA;AACA,qBAAqB;AACrB;AACA,wCAAwC,uBAAuB;AAC/D;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,mBAAmB,iEAAU;AAC7B;AACA;AACA;AACA;AACA,wCAAwC,uBAAuB;AAC/D;AACA;AACA;AACA,qBAAqB;AACrB;AACA,wCAAwC,uBAAuB;AAC/D;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,oBAAoB,iEAAU;AAC9B;AACA;AACA;AACA,wCAAwC,uBAAuB;AAC/D;AACA;AACA;AACA,qBAAqB;AACrB;AACA,wCAAwC,uBAAuB;AAC/D;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qCAAqC,EAAE;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;AC7Ya;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,GAAkC;AACnD,qC;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,CAAM;AAC3B;AACA,qC;;;;;;;;ACJA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,qC;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACE;AAC0D;AAC1D;AAC/C;AACA;AACA;AACO;AACP,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA,oBAAoB,6EAAoB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,2DAAU,cAAc,EAAE;AAC7D;AACA,2BAA2B,iEAAU,cAAc,EAAE;AACrD;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA,4BAA4B,0EAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,qEAAM;AACrC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gEAAS;AAC9B;AACA;AACA,mBAAmB,gEAAS;AAC5B;AACA;AACA,mBAAmB,0EAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA,uBAAuB,6DAAI;AAC3B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA,uBAAuB,qEAAY;AACnC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,gBAAgB,0EAAiB;AACjC,uBAAuB,gEAAS;AAChC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,gBAAgB,0EAAiB;AACjC,gBAAgB,gEAAS;AACzB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA,uBAAuB,yEAAgB;AACvC,aAAa;AACb;AACA;AACA;AACA;AACA,sC;;;;;;;;AC3Na;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,GAA8B;AAC/C,iC;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,CAAM;AAC3B;AACA,iC;;;;;;;;ACJA;AAAA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC4B;AAC7B,+C;;;;;;;;AC/EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AAC2C;AACoD;AAClD;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA,eAAe,6BAA6B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,iCAAiC,EAAE;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,sBAAsB,OAAO;AAC7B,iBAAiB;AACjB;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B,mBAAmB;AACnB;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B,mBAAmB;AACnB;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B,iBAAiB,8BAA8B;AAC/C;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA,mBAAmB,2DAAU;AAC7B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,QAAQ,mFAAe,EAAE,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,QAAQ,mFAAe,EAAE,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,QAAQ,mFAAe,EAAE,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,QAAQ,mFAAe;AACvB;AACA;AACA;AACA;AACA;AACA,QAAQ,mFAAe;AACvB;AACA;AACA;AACA;AACA;AACA,QAAQ,iFAAa;AACrB;AACA;AACA,wCAAwC,2DAAU;AAClD;AACA;AACA,CAAC;AAC6B;AAC9B;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,aAAa,WAAW,GAAG;AACpD,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B,uBAAuB,OAAO;AAC9B,wBAAwB,OAAO;AAC/B;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,sBAAsB,OAAO;AAC7B,yBAAyB,OAAO;AAChC,0BAA0B,OAAO;AACjC;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,sBAAsB,OAAO;AAC7B,yBAAyB,OAAO;AAChC,0BAA0B,OAAO;AACjC;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,yDAAU,EAAE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,eAAe;AAC9B;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,aAAa,WAAW,GAAG;AACxD,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,0EAAM;AACd;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC,CAAC,6EAAiB;AACK;AACxB,iC;;;;;;;;;;;;;;;;;;;;;;;AC1SwC;AACsE;AAExC;AACV;AACL;AASvD;IAOI,gCAAmB,eAAsC,EAAS,IAAiB,EAAQ,GAAiB,EAAS,OAAsB,EAAS,SAAoB,EAAS,eAAgC,EAAS,SAA0B;QAAjO,oBAAe,GAAf,eAAe,CAAuB;QAAS,SAAI,GAAJ,IAAI,CAAa;QAAQ,QAAG,GAAH,GAAG,CAAc;QAAS,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAAS,oBAAe,GAAf,eAAe,CAAiB;QAAS,cAAS,GAAT,SAAS,CAAiB;QAClP,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACvC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QAC/B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAC/D,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAC7D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAG,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACvE,CAAC;IAbQ,sBAAsB;QAJlC,gEAAS,CAAC;YACP,QAAQ,EAAE,2BAA2B;WACG;SAC3C,CAAC;+BAQsP;OAP3O,sBAAsB,CAelC;IAAD,CAAC;AAAA;SAfY,sBAAsB,iB","file":"11.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\n// import { PipesModule } from '../../pipes/pipes.module';\n\nimport { PropertyDetailListPage } from './property-detail-list';\nimport { InAppBrowser } from '@ionic-native/in-app-browser';\n\nimport {UserProvider} from '../../providers/user/user';\nimport { HttpClient, HttpHeaders, HttpClientModule } from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\n\n@NgModule({\n\tdeclarations: [\n\t\tPropertyDetailListPage\n\t],\n\timports: [\n\t\tIonicPageModule.forChild(PropertyDetailListPage), HttpModule\n\t],\n\texports: [\n\t\tPropertyDetailListPage\n\t],\n\tproviders:[InAppBrowser, UserProvider]\n})\n\nexport class PropertyListPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/property-detail-list/property-detail-list.module.ts","export * from './plugin';\nexport * from './decorators';\nexport * from './util';\nexport * from './ionic-native-plugin';\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/core/index.js\n// module id = 911\n// module chunks = 0 1 2 3 4 5 6 7 11 12","/**\n * @private\n */\nexport var get = function (element, path) {\n    var paths = path.split('.');\n    var obj = element;\n    for (var i = 0; i < paths.length; i++) {\n        if (!obj) {\n            return null;\n        }\n        obj = obj[paths[i]];\n    }\n    return obj;\n};\n/**\n * @private\n */\nexport var getPromise = function (callback) {\n    var tryNativePromise = function () {\n        if (window.Promise) {\n            return new Promise(function (resolve, reject) {\n                callback(resolve, reject);\n            });\n        }\n        else {\n            console.error('No Promise support or polyfill found. To enable Ionic Native support, please add the es6-promise polyfill before this script, or run with a library like Angular or on a recent browser.');\n        }\n    };\n    return tryNativePromise();\n};\n/**\n * @private\n * @param pluginRef\n * @returns {null|*}\n */\nexport var getPlugin = function (pluginRef) {\n    return get(window, pluginRef);\n};\n/**\n * @private\n */\nexport var pluginWarn = function (pluginName, plugin, method) {\n    if (method) {\n        console.warn('Ionic Native: tried calling ' +\n            pluginName +\n            '.' +\n            method +\n            ', but the ' +\n            pluginName +\n            ' plugin is not installed.');\n    }\n    else {\n        console.warn(\"'Ionic Native: tried accessing the \" + pluginName + \" plugin but it's not installed.\");\n    }\n    if (plugin) {\n        console.warn(\"Install the \" + pluginName + \" plugin: 'ionic cordova plugin add \" + plugin + \"'\");\n    }\n};\n/**\n * @private\n * @param pluginName\n * @param method\n */\nexport var cordovaWarn = function (pluginName, method) {\n    if (method) {\n        console.warn('Ionic Native: tried calling ' +\n            pluginName +\n            '.' +\n            method +\n            ', but Cordova is not available. Make sure to a) run in a real device or simulator and b) include cordova.js in your index.html');\n    }\n    else {\n        console.warn('Native: tried accessing the ' +\n            pluginName +\n            ' plugin but Cordova is not available. Make sure to a) run in a real device or simulator and b) include cordova.js in your index.html');\n    }\n};\n//# sourceMappingURL=util.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/core/util.js\n// module id = 912\n// module chunks = 0 1 2 3 4 5 6 7 11 12","import { Observable } from 'rxjs/Observable';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { checkReady } from './bootstrap';\nimport { cordovaWarn, getPlugin, getPromise, pluginWarn } from './util';\ncheckReady();\n// declare const window;\n// declare var Promise;\nexport var ERR_CORDOVA_NOT_AVAILABLE = { error: 'cordova_not_available' };\nexport var ERR_PLUGIN_NOT_INSTALLED = { error: 'plugin_not_installed' };\nexport function checkAvailability(plugin, methodName, pluginName) {\n    var pluginRef, pluginInstance, pluginPackage;\n    if (typeof plugin === 'string') {\n        pluginRef = plugin;\n    }\n    else {\n        pluginRef = plugin.constructor.getPluginRef();\n        pluginName = plugin.constructor.getPluginName();\n        pluginPackage = plugin.constructor.getPluginInstallName();\n    }\n    pluginInstance = getPlugin(pluginRef);\n    if (!pluginInstance ||\n        (!!methodName && typeof pluginInstance[methodName] === 'undefined')) {\n        if (!window.cordova) {\n            cordovaWarn(pluginName, methodName);\n            return ERR_CORDOVA_NOT_AVAILABLE;\n        }\n        pluginWarn(pluginName, pluginPackage, methodName);\n        return ERR_PLUGIN_NOT_INSTALLED;\n    }\n    return true;\n}\n/**\n * Checks if _objectInstance exists and has the method/property\n * @private\n */\nexport function instanceAvailability(pluginObj, methodName) {\n    return (pluginObj._objectInstance &&\n        (!methodName ||\n            typeof pluginObj._objectInstance[methodName] !== 'undefined'));\n}\nfunction setIndex(args, opts, resolve, reject) {\n    if (opts === void 0) { opts = {}; }\n    // ignore resolve and reject in case sync\n    if (opts.sync) {\n        return args;\n    }\n    // If the plugin method expects myMethod(success, err, options)\n    if (opts.callbackOrder === 'reverse') {\n        // Get those arguments in the order [resolve, reject, ...restOfArgs]\n        args.unshift(reject);\n        args.unshift(resolve);\n    }\n    else if (opts.callbackStyle === 'node') {\n        args.push(function (err, result) {\n            if (err) {\n                reject(err);\n            }\n            else {\n                resolve(result);\n            }\n        });\n    }\n    else if (opts.callbackStyle === 'object' &&\n        opts.successName &&\n        opts.errorName) {\n        var obj = {};\n        obj[opts.successName] = resolve;\n        obj[opts.errorName] = reject;\n        args.push(obj);\n    }\n    else if (typeof opts.successIndex !== 'undefined' ||\n        typeof opts.errorIndex !== 'undefined') {\n        var setSuccessIndex = function () {\n            // If we've specified a success/error index\n            if (opts.successIndex > args.length) {\n                args[opts.successIndex] = resolve;\n            }\n            else {\n                args.splice(opts.successIndex, 0, resolve);\n            }\n        };\n        var setErrorIndex = function () {\n            // We don't want that the reject cb gets spliced into the position of an optional argument that has not been defined and thus causing non expected behaviour.\n            if (opts.errorIndex > args.length) {\n                args[opts.errorIndex] = reject; // insert the reject fn at the correct specific index\n            }\n            else {\n                args.splice(opts.errorIndex, 0, reject); // otherwise just splice it into the array\n            }\n        };\n        if (opts.successIndex > opts.errorIndex) {\n            setErrorIndex();\n            setSuccessIndex();\n        }\n        else {\n            setSuccessIndex();\n            setErrorIndex();\n        }\n    }\n    else {\n        // Otherwise, let's tack them on to the end of the argument list\n        // which is 90% of cases\n        args.push(resolve);\n        args.push(reject);\n    }\n    return args;\n}\nfunction callCordovaPlugin(pluginObj, methodName, args, opts, resolve, reject) {\n    if (opts === void 0) { opts = {}; }\n    // Try to figure out where the success/error callbacks need to be bound\n    // to our promise resolve/reject handlers.\n    args = setIndex(args, opts, resolve, reject);\n    var availabilityCheck = checkAvailability(pluginObj, methodName);\n    if (availabilityCheck === true) {\n        var pluginInstance = getPlugin(pluginObj.constructor.getPluginRef());\n        return pluginInstance[methodName].apply(pluginInstance, args);\n    }\n    else {\n        return availabilityCheck;\n    }\n}\nfunction wrapPromise(pluginObj, methodName, args, opts) {\n    if (opts === void 0) { opts = {}; }\n    var pluginResult, rej;\n    var p = getPromise(function (resolve, reject) {\n        if (opts.destruct) {\n            pluginResult = callCordovaPlugin(pluginObj, methodName, args, opts, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return resolve(args);\n            }, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return reject(args);\n            });\n        }\n        else {\n            pluginResult = callCordovaPlugin(pluginObj, methodName, args, opts, resolve, reject);\n        }\n        rej = reject;\n    });\n    // Angular throws an error on unhandled rejection, but in this case we have already printed\n    // a warning that Cordova is undefined or the plugin is uninstalled, so there is no reason\n    // to error\n    if (pluginResult && pluginResult.error) {\n        p.catch(function () { });\n        typeof rej === 'function' && rej(pluginResult.error);\n    }\n    return p;\n}\nfunction wrapOtherPromise(pluginObj, methodName, args, opts) {\n    if (opts === void 0) { opts = {}; }\n    return getPromise(function (resolve, reject) {\n        var pluginResult = callCordovaPlugin(pluginObj, methodName, args, opts);\n        if (pluginResult) {\n            if (pluginResult.error) {\n                reject(pluginResult.error);\n            }\n            else if (pluginResult.then) {\n                pluginResult.then(resolve).catch(reject);\n            }\n        }\n        else {\n            reject({ error: 'unexpected_error' });\n        }\n    });\n}\nfunction wrapObservable(pluginObj, methodName, args, opts) {\n    if (opts === void 0) { opts = {}; }\n    return new Observable(function (observer) {\n        var pluginResult;\n        if (opts.destruct) {\n            pluginResult = callCordovaPlugin(pluginObj, methodName, args, opts, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return observer.next(args);\n            }, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return observer.error(args);\n            });\n        }\n        else {\n            pluginResult = callCordovaPlugin(pluginObj, methodName, args, opts, observer.next.bind(observer), observer.error.bind(observer));\n        }\n        if (pluginResult && pluginResult.error) {\n            observer.error(pluginResult.error);\n            observer.complete();\n        }\n        return function () {\n            try {\n                if (opts.clearFunction) {\n                    if (opts.clearWithArgs) {\n                        return callCordovaPlugin(pluginObj, opts.clearFunction, args, opts, observer.next.bind(observer), observer.error.bind(observer));\n                    }\n                    return callCordovaPlugin(pluginObj, opts.clearFunction, []);\n                }\n            }\n            catch (e) {\n                console.warn('Unable to clear the previous observable watch for', pluginObj.constructor.getPluginName(), methodName);\n                console.warn(e);\n            }\n        };\n    });\n}\nfunction callInstance(pluginObj, methodName, args, opts, resolve, reject) {\n    if (opts === void 0) { opts = {}; }\n    args = setIndex(args, opts, resolve, reject);\n    if (instanceAvailability(pluginObj, methodName)) {\n        return pluginObj._objectInstance[methodName].apply(pluginObj._objectInstance, args);\n    }\n}\n/**\n * Wrap the event with an observable\n * @private\n * @param event even name\n * @param element The element to attach the event listener to\n * @returns {Observable}\n */\nexport function wrapEventObservable(event, element) {\n    if (element === void 0) { element = window; }\n    return fromEvent(element, event);\n}\n/**\n * Certain plugins expect the user to override methods in the plugin. For example,\n * window.cordova.plugins.backgroundMode.onactivate = function() { ... }.\n *\n * Unfortunately, this is brittle and would be better wrapped as an Observable. overrideFunction\n * does just this.\n * @private\n */\nexport function overrideFunction(pluginObj, methodName, args, opts) {\n    if (opts === void 0) { opts = {}; }\n    return new Observable(function (observer) {\n        var availabilityCheck = checkAvailability(pluginObj, null, pluginObj.constructor.getPluginName());\n        if (availabilityCheck === true) {\n            var pluginInstance_1 = getPlugin(pluginObj.constructor.getPluginRef());\n            pluginInstance_1[methodName] = observer.next.bind(observer);\n            return function () { return (pluginInstance_1[methodName] = function () { }); };\n        }\n        else {\n            observer.error(availabilityCheck);\n            observer.complete();\n        }\n    });\n}\n/**\n * @private\n */\nexport var wrap = function (pluginObj, methodName, opts) {\n    if (opts === void 0) { opts = {}; }\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (opts.sync) {\n            // Sync doesn't wrap the plugin with a promise or observable, it returns the result as-is\n            return callCordovaPlugin(pluginObj, methodName, args, opts);\n        }\n        else if (opts.observable) {\n            return wrapObservable(pluginObj, methodName, args, opts);\n        }\n        else if (opts.eventObservable && opts.event) {\n            return wrapEventObservable(opts.event, opts.element);\n        }\n        else if (opts.otherPromise) {\n            return wrapOtherPromise(pluginObj, methodName, args, opts);\n        }\n        else {\n            return wrapPromise(pluginObj, methodName, args, opts);\n        }\n    };\n};\n/**\n * @private\n */\nexport function wrapInstance(pluginObj, methodName, opts) {\n    if (opts === void 0) { opts = {}; }\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (opts.sync) {\n            return callInstance(pluginObj, methodName, args, opts);\n        }\n        else if (opts.observable) {\n            return new Observable(function (observer) {\n                var pluginResult;\n                if (opts.destruct) {\n                    pluginResult = callInstance(pluginObj, methodName, args, opts, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        return observer.next(args);\n                    }, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        return observer.error(args);\n                    });\n                }\n                else {\n                    pluginResult = callInstance(pluginObj, methodName, args, opts, observer.next.bind(observer), observer.error.bind(observer));\n                }\n                if (pluginResult && pluginResult.error) {\n                    observer.error(pluginResult.error);\n                    observer.complete();\n                }\n                return function () {\n                    try {\n                        if (opts.clearWithArgs) {\n                            return callInstance(pluginObj, opts.clearFunction, args, opts, observer.next.bind(observer), observer.error.bind(observer));\n                        }\n                        return callInstance(pluginObj, opts.clearFunction, []);\n                    }\n                    catch (e) {\n                        console.warn('Unable to clear the previous observable watch for', pluginObj.constructor.getPluginName(), methodName);\n                        console.warn(e);\n                    }\n                };\n            });\n        }\n        else if (opts.otherPromise) {\n            return getPromise(function (resolve, reject) {\n                var result;\n                if (opts.destruct) {\n                    result = callInstance(pluginObj, methodName, args, opts, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        return resolve(args);\n                    }, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        return reject(args);\n                    });\n                }\n                else {\n                    result = callInstance(pluginObj, methodName, args, opts, resolve, reject);\n                }\n                if (result && !!result.then) {\n                    result.then(resolve, reject);\n                }\n                else {\n                    reject();\n                }\n            });\n        }\n        else {\n            var pluginResult_1, rej_1;\n            var p = getPromise(function (resolve, reject) {\n                if (opts.destruct) {\n                    pluginResult_1 = callInstance(pluginObj, methodName, args, opts, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        return resolve(args);\n                    }, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        return reject(args);\n                    });\n                }\n                else {\n                    pluginResult_1 = callInstance(pluginObj, methodName, args, opts, resolve, reject);\n                }\n                rej_1 = reject;\n            });\n            // Angular throws an error on unhandled rejection, but in this case we have already printed\n            // a warning that Cordova is undefined or the plugin is uninstalled, so there is no reason\n            // to error\n            if (pluginResult_1 && pluginResult_1.error) {\n                p.catch(function () { });\n                typeof rej_1 === 'function' && rej_1(pluginResult_1.error);\n            }\n            return p;\n        }\n    };\n}\n//# sourceMappingURL=plugin.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/core/plugin.js\n// module id = 913\n// module chunks = 0 1 2 3 4 5 6 7 11 12","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"rxjs-compat/observable/fromEvent\"));\n//# sourceMappingURL=fromEvent.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/observable/fromEvent.js\n// module id = 914\n// module chunks = 0 1 2 3 4 5 6 7 11 12","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nexports.fromEvent = rxjs_1.fromEvent;\n//# sourceMappingURL=fromEvent.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs-compat/observable/fromEvent.js\n// module id = 915\n// module chunks = 0 1 2 3 4 5 6 7 11 12","export function checkReady() {\n    var DEVICE_READY_TIMEOUT = 5000;\n    // To help developers using cordova, we listen for the device ready event and\n    // log an error if it didn't fire in a reasonable amount of time. Generally,\n    // when this happens, developers should remove and reinstall plugins, since\n    // an inconsistent plugin is often the culprit.\n    var before = Date.now();\n    var didFireReady = false;\n    document.addEventListener('deviceready', function () {\n        console.log(\"Ionic Native: deviceready event fired after \" + (Date.now() - before) + \" ms\");\n        didFireReady = true;\n    });\n    setTimeout(function () {\n        if (!didFireReady && !!window.cordova) {\n            console.warn(\"Ionic Native: deviceready did not fire within \" + DEVICE_READY_TIMEOUT + \"ms. This can happen when plugins are in an inconsistent state. Try removing plugins from plugins/ and reinstalling them.\");\n        }\n    }, DEVICE_READY_TIMEOUT);\n}\n//# sourceMappingURL=bootstrap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/core/bootstrap.js\n// module id = 916\n// module chunks = 0 1 2 3 4 5 6 7 11 12","import { Observable } from 'rxjs/Observable';\nimport { _throw } from 'rxjs/observable/throw';\nimport { checkAvailability, instanceAvailability, overrideFunction, wrap, wrapInstance } from './plugin';\nimport { getPlugin, getPromise } from './util';\n/**\n * @private\n */\nexport function InstanceCheck(opts) {\n    if (opts === void 0) { opts = {}; }\n    return function (pluginObj, methodName, descriptor) {\n        return {\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                if (instanceAvailability(this)) {\n                    return descriptor.value.apply(this, args);\n                }\n                else {\n                    if (opts.sync) {\n                        return;\n                    }\n                    else if (opts.observable) {\n                        return new Observable(function () { });\n                    }\n                    return getPromise(function () { });\n                }\n            },\n            enumerable: true\n        };\n    };\n}\n/**\n * Executes function only if plugin is available\n * @private\n */\nexport function CordovaCheck(opts) {\n    if (opts === void 0) { opts = {}; }\n    return function (pluginObj, methodName, descriptor) {\n        return {\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var check = checkAvailability(pluginObj);\n                if (check === true) {\n                    return descriptor.value.apply(this, args);\n                }\n                else {\n                    if (opts.sync) {\n                        return null;\n                    }\n                    else if (opts.observable) {\n                        return _throw(new Error(check && check.error));\n                    }\n                    return Promise.reject(check && check.error);\n                }\n            },\n            enumerable: true\n        };\n    };\n}\n/**\n * @private\n *\n * Class decorator specifying Plugin metadata. Required for all plugins.\n *\n * @usage\n * ```typescript\n * @Plugin({\n *  pluginName: 'MyPlugin',\n *  plugin: 'cordova-plugin-myplugin',\n *  pluginRef: 'window.myplugin'\n *  })\n *  export class MyPlugin {\n *\n *    // Plugin wrappers, properties, and functions go here ...\n *\n *  }\n * ```\n */\nexport function Plugin(config) {\n    return function (cls) {\n        // Add these fields to the class\n        for (var prop in config) {\n            cls[prop] = config[prop];\n        }\n        cls['installed'] = function (printWarning) {\n            return !!getPlugin(config.pluginRef);\n        };\n        cls['getPlugin'] = function () {\n            return getPlugin(config.pluginRef);\n        };\n        cls['checkInstall'] = function () {\n            return checkAvailability(cls) === true;\n        };\n        cls['getPluginName'] = function () {\n            return config.pluginName;\n        };\n        cls['getPluginRef'] = function () {\n            return config.pluginRef;\n        };\n        cls['getPluginInstallName'] = function () {\n            return config.plugin;\n        };\n        cls['getPluginRepo'] = function () {\n            return config.repo;\n        };\n        cls['getSupportedPlatforms'] = function () {\n            return config.platforms;\n        };\n        return cls;\n    };\n}\n/**\n * @private\n *\n * Wrap a stub function in a call to a Cordova plugin, checking if both Cordova\n * and the required plugin are installed.\n */\nexport function Cordova(opts) {\n    if (opts === void 0) { opts = {}; }\n    return function (target, methodName, descriptor) {\n        return {\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return wrap(this, methodName, opts).apply(this, args);\n            },\n            enumerable: true\n        };\n    };\n}\n/**\n * @private\n *\n * Wrap an instance method\n */\nexport function CordovaInstance(opts) {\n    if (opts === void 0) { opts = {}; }\n    return function (target, methodName) {\n        return {\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return wrapInstance(this, methodName, opts).apply(this, args);\n            },\n            enumerable: true\n        };\n    };\n}\n/**\n * @private\n *\n *\n * Before calling the original method, ensure Cordova and the plugin are installed.\n */\nexport function CordovaProperty(target, key) {\n    Object.defineProperty(target, key, {\n        enumerable: true,\n        get: function () {\n            if (checkAvailability(target, key) === true) {\n                return getPlugin(target.constructor.getPluginRef())[key];\n            }\n            else {\n                return null;\n            }\n        },\n        set: function (value) {\n            if (checkAvailability(target, key) === true) {\n                getPlugin(target.constructor.getPluginRef())[key] = value;\n            }\n        }\n    });\n}\n/**\n * @private\n * @param target\n * @param key\n * @constructor\n */\nexport function InstanceProperty(target, key) {\n    Object.defineProperty(target, key, {\n        enumerable: true,\n        get: function () {\n            return this._objectInstance[key];\n        },\n        set: function (value) {\n            this._objectInstance[key] = value;\n        }\n    });\n}\n/**\n * @private\n *\n * Wrap a stub function in a call to a Cordova plugin, checking if both Cordova\n * and the required plugin are installed.\n */\nexport function CordovaFunctionOverride(opts) {\n    if (opts === void 0) { opts = {}; }\n    return function (target, methodName, descriptor) {\n        return {\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return overrideFunction(this, methodName, opts);\n            },\n            enumerable: true\n        };\n    };\n}\n//# sourceMappingURL=decorators.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/core/decorators.js\n// module id = 917\n// module chunks = 0 1 2 3 4 5 6 7 11 12","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"rxjs-compat/observable/throw\"));\n//# sourceMappingURL=throw.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/observable/throw.js\n// module id = 918\n// module chunks = 0 1 2 3 4 5 6 7 11 12","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nexports._throw = rxjs_1.throwError;\n//# sourceMappingURL=throw.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs-compat/observable/throw.js\n// module id = 919\n// module chunks = 0 1 2 3 4 5 6 7 11 12","var IonicNativePlugin = (function () {\n    function IonicNativePlugin() {\n    }\n    /**\n     * Returns a boolean that indicates whether the plugin is installed\n     * @return {boolean}\n     */\n    /**\n       * Returns a boolean that indicates whether the plugin is installed\n       * @return {boolean}\n       */\n    IonicNativePlugin.installed = /**\n       * Returns a boolean that indicates whether the plugin is installed\n       * @return {boolean}\n       */\n    function () {\n        return false;\n    };\n    /**\n     * Returns the original plugin object\n     */\n    /**\n       * Returns the original plugin object\n       */\n    IonicNativePlugin.getPlugin = /**\n       * Returns the original plugin object\n       */\n    function () { };\n    /**\n     * Returns the plugin's name\n     */\n    /**\n       * Returns the plugin's name\n       */\n    IonicNativePlugin.getPluginName = /**\n       * Returns the plugin's name\n       */\n    function () {\n        return;\n    };\n    /**\n     * Returns the plugin's reference\n     */\n    /**\n       * Returns the plugin's reference\n       */\n    IonicNativePlugin.getPluginRef = /**\n       * Returns the plugin's reference\n       */\n    function () {\n        return;\n    };\n    /**\n     * Returns the plugin's install name\n     */\n    /**\n       * Returns the plugin's install name\n       */\n    IonicNativePlugin.getPluginInstallName = /**\n       * Returns the plugin's install name\n       */\n    function () {\n        return;\n    };\n    /**\n     * Returns the plugin's supported platforms\n     */\n    /**\n       * Returns the plugin's supported platforms\n       */\n    IonicNativePlugin.getSupportedPlatforms = /**\n       * Returns the plugin's supported platforms\n       */\n    function () {\n        return;\n    };\n    return IonicNativePlugin;\n}());\nexport { IonicNativePlugin };\n//# sourceMappingURL=ionic-native-plugin.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/core/ionic-native-plugin.js\n// module id = 920\n// module chunks = 0 1 2 3 4 5 6 7 11 12","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { CordovaInstance, InstanceCheck, IonicNativePlugin, Plugin } from '@ionic-native/core';\nimport { Observable } from 'rxjs/Observable';\n/**\n * @hidden\n */\nvar InAppBrowserObject = (function () {\n    /**\n     * Opens a URL in a new InAppBrowser instance, the current browser instance, or the system browser.\n     * @param {string} url     The URL to load.\n     * @param {string} [target=\"self\"]  The target in which to load the URL, an optional parameter that defaults to _self.\n     *                 _self: Opens in the WebView if the URL is in the white list, otherwise it opens in the InAppBrowser.\n     *                 _blank: Opens in the InAppBrowser.\n     *                 _system: Opens in the system's web browser.\n     * @param {string | InAppBrowserOptions} [options] Options for the InAppBrowser. Optional, defaulting to: location=yes.\n     *                 The options string must not contain any blank space, and each feature's\n     *                 name/value pairs must be separated by a comma. Feature names are case insensitive.\n     */\n    function InAppBrowserObject(url, target, options) {\n        try {\n            if (options && typeof options !== 'string') {\n                options = Object.keys(options)\n                    .map(function (key) { return key + \"=\" + options[key]; })\n                    .join(',');\n            }\n            this._objectInstance = cordova.InAppBrowser.open(url, target, options);\n        }\n        catch (e) {\n            window.open(url, target);\n            console.warn('Native: InAppBrowser is not installed or you are running on a browser. Falling back to window.open.');\n        }\n    }\n    /**\n     * Displays an InAppBrowser window that was opened hidden. Calling this has no effect\n     * if the InAppBrowser was already visible.\n     */\n    /**\n       * Displays an InAppBrowser window that was opened hidden. Calling this has no effect\n       * if the InAppBrowser was already visible.\n       */\n    InAppBrowserObject.prototype.show = /**\n       * Displays an InAppBrowser window that was opened hidden. Calling this has no effect\n       * if the InAppBrowser was already visible.\n       */\n    function () { };\n    /**\n     * Closes the InAppBrowser window.\n     */\n    /**\n       * Closes the InAppBrowser window.\n       */\n    InAppBrowserObject.prototype.close = /**\n       * Closes the InAppBrowser window.\n       */\n    function () { };\n    /**\n     * Hides an InAppBrowser window that is currently shown. Calling this has no effect\n     * if the InAppBrowser was already hidden.\n     */\n    /**\n       * Hides an InAppBrowser window that is currently shown. Calling this has no effect\n       * if the InAppBrowser was already hidden.\n       */\n    InAppBrowserObject.prototype.hide = /**\n       * Hides an InAppBrowser window that is currently shown. Calling this has no effect\n       * if the InAppBrowser was already hidden.\n       */\n    function () { };\n    /**\n     * Injects JavaScript code into the InAppBrowser window.\n     * @param script {Object} Details of the script to run, specifying either a file or code key.\n     * @returns {Promise<any>}\n     */\n    /**\n       * Injects JavaScript code into the InAppBrowser window.\n       * @param script {Object} Details of the script to run, specifying either a file or code key.\n       * @returns {Promise<any>}\n       */\n    InAppBrowserObject.prototype.executeScript = /**\n       * Injects JavaScript code into the InAppBrowser window.\n       * @param script {Object} Details of the script to run, specifying either a file or code key.\n       * @returns {Promise<any>}\n       */\n    function (script) {\n        return;\n    };\n    /**\n     * Injects CSS into the InAppBrowser window.\n     * @param css {Object} Details of the script to run, specifying either a file or code key.\n     * @returns {Promise<any>}\n     */\n    /**\n       * Injects CSS into the InAppBrowser window.\n       * @param css {Object} Details of the script to run, specifying either a file or code key.\n       * @returns {Promise<any>}\n       */\n    InAppBrowserObject.prototype.insertCSS = /**\n       * Injects CSS into the InAppBrowser window.\n       * @param css {Object} Details of the script to run, specifying either a file or code key.\n       * @returns {Promise<any>}\n       */\n    function (css) {\n        return;\n    };\n    /**\n     * A method that allows you to listen to events happening in the browser.\n     * @param event {string} Name of the event\n     * @returns {Observable<InAppBrowserEvent>} Returns back an observable that will listen to the event on subscribe, and will stop listening to the event on unsubscribe.\n     */\n    /**\n       * A method that allows you to listen to events happening in the browser.\n       * @param event {string} Name of the event\n       * @returns {Observable<InAppBrowserEvent>} Returns back an observable that will listen to the event on subscribe, and will stop listening to the event on unsubscribe.\n       */\n    InAppBrowserObject.prototype.on = /**\n       * A method that allows you to listen to events happening in the browser.\n       * @param event {string} Name of the event\n       * @returns {Observable<InAppBrowserEvent>} Returns back an observable that will listen to the event on subscribe, and will stop listening to the event on unsubscribe.\n       */\n    function (event) {\n        var _this = this;\n        return new Observable(function (observer) {\n            _this._objectInstance.addEventListener(event, observer.next.bind(observer));\n            return function () {\n                return _this._objectInstance.removeEventListener(event, observer.next.bind(observer));\n            };\n        });\n    };\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], InAppBrowserObject.prototype, \"show\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], InAppBrowserObject.prototype, \"close\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], InAppBrowserObject.prototype, \"hide\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], InAppBrowserObject.prototype, \"executeScript\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], InAppBrowserObject.prototype, \"insertCSS\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Observable)\n    ], InAppBrowserObject.prototype, \"on\", null);\n    return InAppBrowserObject;\n}());\nexport { InAppBrowserObject };\n/**\n * @name In App Browser\n * @description Launches in app Browser\n * @usage\n * ```typescript\n * import { InAppBrowser } from '@ionic-native/in-app-browser';\n *\n * constructor(private iab: InAppBrowser) { }\n *\n *\n * ...\n *\n *\n * const browser = this.iab.create('https://ionicframework.com/');\n *\n * browser.executeScript(...);\n *\n * browser.insertCSS(...);\n * browser.on('loadstop').subscribe(event => {\n *    browser.insertCSS({ code: \"body{color: red;\" });\n * });\n *\n * browser.close();\n *\n * ```\n * @classes\n * InAppBrowserObject\n * @interfaces\n * InAppBrowserEvent\n * InAppBrowserOptions\n */\nvar InAppBrowser = (function (_super) {\n    __extends(InAppBrowser, _super);\n    function InAppBrowser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Opens a URL in a new InAppBrowser instance, the current browser instance, or the system browser.\n     * @param  url {string}     The URL to load.\n     * @param  target {string}  The target in which to load the URL, an optional parameter that defaults to _self.\n     * @param  options {string} Options for the InAppBrowser. Optional, defaulting to: location=yes.\n     *                 The options string must not contain any blank space, and each feature's\n     *                 name/value pairs must be separated by a comma. Feature names are case insensitive.\n     * @returns {InAppBrowserObject}\n     */\n    /**\n       * Opens a URL in a new InAppBrowser instance, the current browser instance, or the system browser.\n       * @param  url {string}     The URL to load.\n       * @param  target {string}  The target in which to load the URL, an optional parameter that defaults to _self.\n       * @param  options {string} Options for the InAppBrowser. Optional, defaulting to: location=yes.\n       *                 The options string must not contain any blank space, and each feature's\n       *                 name/value pairs must be separated by a comma. Feature names are case insensitive.\n       * @returns {InAppBrowserObject}\n       */\n    InAppBrowser.prototype.create = /**\n       * Opens a URL in a new InAppBrowser instance, the current browser instance, or the system browser.\n       * @param  url {string}     The URL to load.\n       * @param  target {string}  The target in which to load the URL, an optional parameter that defaults to _self.\n       * @param  options {string} Options for the InAppBrowser. Optional, defaulting to: location=yes.\n       *                 The options string must not contain any blank space, and each feature's\n       *                 name/value pairs must be separated by a comma. Feature names are case insensitive.\n       * @returns {InAppBrowserObject}\n       */\n    function (url, target, options) {\n        return new InAppBrowserObject(url, target, options);\n    };\n    InAppBrowser.decorators = [\n        { type: Injectable },\n    ];\n    /**\n     * @name In App Browser\n     * @description Launches in app Browser\n     * @usage\n     * ```typescript\n     * import { InAppBrowser } from '@ionic-native/in-app-browser';\n     *\n     * constructor(private iab: InAppBrowser) { }\n     *\n     *\n     * ...\n     *\n     *\n     * const browser = this.iab.create('https://ionicframework.com/');\n     *\n     * browser.executeScript(...);\n     *\n     * browser.insertCSS(...);\n     * browser.on('loadstop').subscribe(event => {\n     *    browser.insertCSS({ code: \"body{color: red;\" });\n     * });\n     *\n     * browser.close();\n     *\n     * ```\n     * @classes\n     * InAppBrowserObject\n     * @interfaces\n     * InAppBrowserEvent\n     * InAppBrowserOptions\n     */\n    InAppBrowser = __decorate([\n        Plugin({\n            pluginName: 'InAppBrowser',\n            plugin: 'cordova-plugin-inappbrowser',\n            pluginRef: 'cordova.InAppBrowser',\n            repo: 'https://github.com/apache/cordova-plugin-inappbrowser',\n            platforms: ['AmazonFire OS', 'Android', 'Browser', 'iOS', 'macOS', 'Windows']\n        })\n    ], InAppBrowser);\n    return InAppBrowser;\n}(IonicNativePlugin));\nexport { InAppBrowser };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/in-app-browser/index.js\n// module id = 925\n// module chunks = 0 1 2 11","import {Component} from '@angular/core';\nimport {IonicPage, ActionSheetController, ActionSheet, NavController, NavParams, ToastController} from 'ionic-angular';\n\nimport {PropertyService} from '../../providers/property-service-mock';\nimport { InAppBrowser } from '@ionic-native/in-app-browser';\nimport {UserProvider} from '../../providers/user/user';\n\ndeclare var cordova: any;\n@IonicPage({\n\tname: 'page-property-detail-list',\n\tsegment: 'property-detail-list'\n})\n\n@Component({\n    selector: 'page-property-detail-list',\n    templateUrl: 'property-detail-list.html'\n})\nexport class PropertyDetailListPage {\n   data:any;\n   propertyDetails:any;\n   images:any;\n   propertyDetails1:any;\n\t\n\n    constructor(public actionSheetCtrl: ActionSheetController, public user:UserProvider,public iab: InAppBrowser, public navCtrl: NavController, public navParams: NavParams, public propertyService: PropertyService, public toastCtrl: ToastController) {\n      this.data = this.navParams.get('item');\n      this.images = this.data.Images;\n      this.propertyDetails1 = this.navParams.get('propertyDetails1');\n      this.propertyDetails = this.navParams.get('propertyDetails');\n      console.log(this.data,  this.propertyDetails, this.propertyDetails1);\n    } \n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/property-detail-list/property-detail-list.ts"],"sourceRoot":""}