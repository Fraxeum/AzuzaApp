webpackJsonp([27],{

/***/ 655:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MyAccountPageModule\", function() { return MyAccountPageModule; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_common__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__deposit_money__ = __webpack_require__(767);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_native_clipboard__ = __webpack_require__(755);\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n\n\nvar MyAccountPageModule = /** @class */ (function () {\n    function MyAccountPageModule() {\n    }\n    MyAccountPageModule = __decorate([\n        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"J\" /* NgModule */])({\n            declarations: [\n                __WEBPACK_IMPORTED_MODULE_3__deposit_money__[\"a\" /* DepositMoneyPage */]\n            ],\n            imports: [\n                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__[\"p\" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_3__deposit_money__[\"a\" /* DepositMoneyPage */]),\n                __WEBPACK_IMPORTED_MODULE_2__angular_common__[\"b\" /* CommonModule */]\n            ],\n            exports: [\n                __WEBPACK_IMPORTED_MODULE_3__deposit_money__[\"a\" /* DepositMoneyPage */]\n            ],\n            providers: [__WEBPACK_IMPORTED_MODULE_4__ionic_native_clipboard__[\"a\" /* Clipboard */]]\n        })\n    ], MyAccountPageModule);\n    return MyAccountPageModule;\n}());\n\n//# sourceMappingURL=deposit-money.module.js.map\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/deposit-money/deposit-money.module.ts\n// module id = 655\n// module chunks = 27\n\n//# sourceURL=/Users/llewellynmorkel/Desktop/AZUZAAPP/AZUZA_0.1.1/src/pages/deposit-money/deposit-money.module.ts");

/***/ }),

/***/ 755:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Clipboard; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ionic_native_core__ = __webpack_require__(38);\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\n/**\n * @name Clipboard\n * @description\n * Clipboard management plugin for Cordova that supports iOS, Android, and Windows Phone 8.\n *\n *\n * @usage\n * ```typescript\n * import { Clipboard } from '@ionic-native/clipboard';\n *\n * constructor(private clipboard: Clipboard) { }\n *\n * ...\n *\n *\n * this.clipboard.copy('Hello world');\n *\n * this.clipboard.paste().then(\n *    (resolve: string) => {\n *       alert(resolve);\n *     },\n *     (reject: string) => {\n *       alert('Error: ' + reject);\n *     }\n *   );\n *\n * this.clipboard.clear();\n * ```\n */\nvar Clipboard = (function (_super) {\n    __extends(Clipboard, _super);\n    function Clipboard() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Copies the given text\n     * @param {string} text Text that gets copied on the system clipboard\n     * @returns {Promise<any>} Returns a promise after the text has been copied\n     */\n    /**\n       * Copies the given text\n       * @param {string} text Text that gets copied on the system clipboard\n       * @returns {Promise<any>} Returns a promise after the text has been copied\n       */\n    Clipboard.prototype.copy = /**\n       * Copies the given text\n       * @param {string} text Text that gets copied on the system clipboard\n       * @returns {Promise<any>} Returns a promise after the text has been copied\n       */\n    function (text) {\n        return;\n    };\n    /**\n     * Pastes the text stored in clipboard\n     * @returns {Promise<any>} Returns a promise after the text has been pasted\n     */\n    /**\n       * Pastes the text stored in clipboard\n       * @returns {Promise<any>} Returns a promise after the text has been pasted\n       */\n    Clipboard.prototype.paste = /**\n       * Pastes the text stored in clipboard\n       * @returns {Promise<any>} Returns a promise after the text has been pasted\n       */\n    function () {\n        return;\n    };\n    /**\n     * Clear the text stored in clipboard\n     * @returns {Promise<any>} Returns a promise after the text has been cleaned\n     */\n    /**\n       * Clear the text stored in clipboard\n       * @returns {Promise<any>} Returns a promise after the text has been cleaned\n       */\n    Clipboard.prototype.clear = /**\n       * Clear the text stored in clipboard\n       * @returns {Promise<any>} Returns a promise after the text has been cleaned\n       */\n    function () {\n        return;\n    };\n    Clipboard.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"B\" /* Injectable */] },\n    ];\n    __decorate([\n        Object(__WEBPACK_IMPORTED_MODULE_1__ionic_native_core__[\"a\" /* Cordova */])(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], Clipboard.prototype, \"copy\", null);\n    __decorate([\n        Object(__WEBPACK_IMPORTED_MODULE_1__ionic_native_core__[\"a\" /* Cordova */])(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], Clipboard.prototype, \"paste\", null);\n    __decorate([\n        Object(__WEBPACK_IMPORTED_MODULE_1__ionic_native_core__[\"a\" /* Cordova */])(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], Clipboard.prototype, \"clear\", null);\n    /**\n     * @name Clipboard\n     * @description\n     * Clipboard management plugin for Cordova that supports iOS, Android, and Windows Phone 8.\n     *\n     *\n     * @usage\n     * ```typescript\n     * import { Clipboard } from '@ionic-native/clipboard';\n     *\n     * constructor(private clipboard: Clipboard) { }\n     *\n     * ...\n     *\n     *\n     * this.clipboard.copy('Hello world');\n     *\n     * this.clipboard.paste().then(\n     *    (resolve: string) => {\n     *       alert(resolve);\n     *     },\n     *     (reject: string) => {\n     *       alert('Error: ' + reject);\n     *     }\n     *   );\n     *\n     * this.clipboard.clear();\n     * ```\n     */\n    Clipboard = __decorate([\n        Object(__WEBPACK_IMPORTED_MODULE_1__ionic_native_core__[\"g\" /* Plugin */])({\n            pluginName: 'Clipboard',\n            plugin: 'cordova-clipboard',\n            pluginRef: 'cordova.plugins.clipboard',\n            repo: 'https://github.com/ihadeed/cordova-clipboard',\n            platforms: ['Android', 'iOS', 'Windows Phone 8']\n        })\n    ], Clipboard);\n    return Clipboard;\n}(__WEBPACK_IMPORTED_MODULE_1__ionic_native_core__[\"f\" /* IonicNativePlugin */]));\n\n//# sourceMappingURL=index.js.map\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/clipboard/index.js\n// module id = 755\n// module chunks = 27\n\n//# sourceURL=/Users/llewellynmorkel/Desktop/AZUZAAPP/AZUZA_0.1.1/node_modules/@ionic-native/clipboard/index.js");

/***/ }),

/***/ 767:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return DepositMoneyPage; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ionic_native_clipboard__ = __webpack_require__(755);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_ionic_angular__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_user_user__ = __webpack_require__(18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__pages_auth_auth__ = __webpack_require__(46);\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\n\n\n\n\nvar DepositMoneyPage = /** @class */ (function () {\n    /* Raheel se kak\n    general: any;\n    showUp: boolean = false;\n    cryptocurrency: any;\n    relationship: any;\n    bank: any;\n    amount: number;\n    reference: any;\n    walletBalance: any;\n    showpara: boolean = false;\n    hide: boolean = true;\n    currencyName: any;\n    body: any;\n    iPaymentId: any;\n    PayNow_link: any;\n    iApiTransactionId: any;\n    EFT: any;\n    CreditCard: any;\n    Crypto: any;\n    fees: number;\n    total: number;\n    pay_link: string;\n    currencysymbol: any; */\n    function DepositMoneyPage(navCtrl, navparams, user, clipboard) {\n        this.navCtrl = navCtrl;\n        this.navparams = navparams;\n        this.user = user;\n        /* Working Vars */\n        this.currentPage = \"setup\";\n        this.firstLoad = true;\n        this.eftResponse = null;\n        this.cardResponse = null;\n        this.cryptoResponse = null;\n        this.paymentMethods = [\"eft\", \"card\", \"crypto\"];\n        this.cryptoIcons = [{ \"name\": \"Fraxeum\" }, { \"name\": \"Bitcoin\" }, { \"name\": \"Bitcoin SV\" }, { \"name\": \"Bitcoin Cash\" }, { \"name\": \"Ethereum\" }, { \"name\": \"Neo\" }, { \"name\": \"Monero\" }, { \"name\": \"Litecoin\" }, { \"name\": \"Ethereum Classic\" }];\n        this.test = \"1\";\n        this.selectedCryptoIndex = 0;\n        this.depositPageHeader = \"\";\n        this.clipboard = clipboard;\n        this.primeDepositOptionsData();\n    }\n    DepositMoneyPage.prototype.copyToClipboard = function (fieldname, str) {\n        this.clipboard.copy(str);\n        this.user.setToast(fieldname + \"copied to device clipboard\");\n        return;\n    };\n    DepositMoneyPage.prototype.getIconPath = function (iconName) {\n        return \"/assets/icon\" + iconName + \".png\";\n    };\n    DepositMoneyPage.prototype.updatePaymentMethod = function (paymentMethodId) {\n        if (paymentMethodId == null)\n            return;\n        switch (paymentMethodId) {\n            case 0:\n                this.depositObject.paymentMethod = this.paymentMethods[0];\n                this.depositObject.depositDetails.currency = \"ZAR\";\n                this.depositObject.depositDetails.base = \"ZAR\";\n                break;\n            case 1:\n                this.depositObject.paymentMethod = this.paymentMethods[1];\n                this.depositObject.depositDetails.currency = \"ZAR\";\n                this.depositObject.depositDetails.base = \"ZAR\";\n                break;\n            case 2:\n                this.depositObject.paymentMethod = this.paymentMethods[2];\n                this.depositObject.depositDetails.base = \"FRX\";\n                this.depositObject.depositDetails.currency = \"FRX\";\n                this.selectedCryptoIndex = 0;\n                break;\n        }\n        return;\n    };\n    DepositMoneyPage.prototype.setCryptoCurrency = function (symbol, index) {\n        if (!symbol)\n            return;\n        console.log(this.depositObject.depositDetails.currency);\n        this.depositObject.depositDetails.currency = symbol;\n        this.depositObject.depositDetails.base = symbol;\n        this.selectedCryptoIndex = index;\n        return;\n    };\n    DepositMoneyPage.prototype.toggleCryptoCurrency = function () {\n        if (this.depositObject.paymentMethod != 'crypto')\n            return;\n        if (this.depositObject.depositDetails.base != 'ZAR') {\n            this.depositObject.depositDetails.base = \"ZAR\";\n        }\n        else\n            this.depositObject.depositDetails.base = this.depositObject.depositDetails.currency;\n        return;\n    };\n    DepositMoneyPage.prototype.primeDepositOptionsData = function () {\n        this.depositDetails = { \"reference\": \"\", \"currency\": \"\", \"CountryId\": \"\", \"amount\": \"\", \"fundId\": \"\" };\n        this.depositOptions = { \"EFT\": { \"BankAccountName\": \"\", \"BankAccountNumber\": \"\", \"BankAccountType\": \"\", \"BankBranchCode\": \"\", \"BankName\": \"\", \"BankStreetAddress\": \"\", \"BankSwiftCode\": \"\" }, \"Crypto\": [{ \"name\": \"\", \"symbol\": \"\" }], \"CreditCard\": { \"success\": true, \"code\": 0, \"message\": \"\", \"data\": { \"iApiTransactionId\": \"\" } }, \"reference\": \"\", \"currency\": \"\", \"CountryId\": \"\", \"amount\": \"\", \"fundId\": \"\" };\n        this.depositObject = { \"paymentMethod\": this.paymentMethods[0], \"depositDetails\": { \"amount\": null, \"currency\": \"ZAR\", \"base\": \"ZAR\" } };\n        this.cryptoOptions = [{ \"name\": \"\", \"symbol\": \"\" }];\n    };\n    DepositMoneyPage.prototype.goHome = function () {\n        this.navCtrl.setRoot('page-home');\n    };\n    DepositMoneyPage.prototype.exitToLoginPage = function (message) {\n        if (!message) {\n            message = \"Your session has expired. Please log in again.\";\n        }\n        this.user.setToast(message);\n        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_4__pages_auth_auth__[\"a\" /* AuthPage */]);\n    };\n    DepositMoneyPage.prototype.getPaymentMethodType = function () {\n        switch (this.depositObject.paymentMethod) {\n            case 'card': return this.paymentMethods[1];\n            case 'crypto': return this.paymentMethods[2];\n            default: return this.paymentMethods[0];\n        }\n    };\n    DepositMoneyPage.prototype.emailBankingDetails = function () {\n        this.user.setToast(\"The deposit details have been emailed to you!\");\n    };\n    DepositMoneyPage.prototype.loadBankingData = function () {\n        var _this = this;\n        var amount = this.depositObject.depositDetails.amount;\n        var currency = this.depositObject.depositDetails.currency;\n        if (this.firstLoad) {\n            this.user.createLoadingPopup(\"Connecting to AZUZA\", true);\n        }\n        return new Promise(function (resolve, reject) {\n            _this.user.loadBankingOptions(amount, currency).then(function (response) { return __awaiter(_this, void 0, void 0, function () {\n                var data;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            this.user.dismissLoadingPopup();\n                            return [4 /*yield*/, response];\n                        case 1:\n                            data = _a.sent();\n                            if (!data || (!data.success && data.code == \"1000\") || !(data.data)) {\n                                this.exitToLoginPage();\n                                return [2 /*return*/, false];\n                            }\n                            this.depositDetails.amount = data.data.amount;\n                            this.depositDetails.reference = data.data.reference;\n                            this.depositDetails.currency = data.data.currency;\n                            if (data.data.EFT && this.depositObject.paymentMethod === this.paymentMethods[0]) {\n                                this.eftResponse = data.data.EFT;\n                                this.currentPage = \"EFT_Final\";\n                                this.depositPageHeader = \"Deposit Summary\";\n                                return [2 /*return*/];\n                            }\n                            if (data.data.CreditCard && this.depositObject.paymentMethod === this.paymentMethods[1]) {\n                                //show card payment page\n                                this.cardResponse = data.data.CreditCard;\n                                this.currentPage = \"card_step\";\n                                this.depositPageHeader = \"Payment summary\";\n                                return [2 /*return*/];\n                            }\n                            if (data.data.Crypto && this.depositObject.paymentMethod === this.paymentMethods[2]) {\n                                this.cardResponse = data.data.CreditCard;\n                                //show crypto payment page\n                                this.currentPage = \"crypto_step\";\n                                this.depositPageHeader = \"Crypto Payment Details\";\n                                return [2 /*return*/];\n                            }\n                            return [2 /*return*/];\n                    }\n                });\n            }); });\n        });\n    };\n    DepositMoneyPage.prototype.goBack = function () {\n        this.currentPage = \"setup\";\n        this.primeDepositOptionsData();\n    };\n    DepositMoneyPage.prototype.nextStep = function () {\n        this.loadBankingData();\n        return;\n    };\n    DepositMoneyPage = __decorate([\n        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"n\" /* Component */])({\n            selector: 'page-deposit-money',template:/*ion-inline-start:\"/Users/llewellynmorkel/Desktop/AZUZAAPP/AZUZA_0.1.1/src/pages/deposit-money/deposit-money.html\"*/'<ion-header>\\n    <ion-navbar>\\n        <button ion-button menuToggle>\\n            <ion-icon name=\"menu\" color=\"light\"></ion-icon>\\n        </button>\\n        <ion-title>\\n            Deposit money\\n        </ion-title>\\n    </ion-navbar>\\n</ion-header>\\n\\n<ion-content>\\n    <div [ngSwitch]=\"currentPage\">\\n\\n        <div *ngSwitchCase=\"\\'setup\\'\">\\n\\n            <div class=\"infoblock\">\\n                <p class=\"text-white\">\\n                    To buy shares you need money in your AZUZA account. AZUZA accepts payments from Internet banking,\\n                    credit - and debit cards as well as a number of cryptocurrencies.\\n                </p>\\n            </div>\\n\\n            <h3 class=\"exo2 section-heading\">Enter your deposit amount\\n            </h3>\\n\\n            <div class=\"input-block\" *ngIf=\"depositObject.paymentMethod != \\'crypto\\'\">\\n                <ion-grid no-padding>\\n                    <ion-row no-padding>\\n                        <ion-col col-2 no-padding text-center>\\n                            <div class=\"switch-button button-left currency-symbol\">\\n                                R\\n                            </div>\\n                        </ion-col>\\n                        <ion-col col-10 no-padding style=\"padding-right: 10px\">\\n                            <ion-input inputmode=\"number\" class=\"input-item text-white right\" autocomplete=\"off\"\\n                                placeholder=\"{{ depositObject.depositDetails.amount }}\"\\n                                [(ngModel)]=\"depositObject.depositDetails.amount\">\\n                            </ion-input>\\n                        </ion-col>\\n                    </ion-row>\\n                </ion-grid>\\n            </div>\\n            <span class=\"smallest left-15 center text-white\" *ngIf=\"depositObject.paymentMethod != \\'crypto\\'\">Specify\\n                amount in South African Rand</span>\\n\\n\\n            <div class=\"input-block\" *ngIf=\"depositObject.paymentMethod === \\'crypto\\'\">\\n                <ion-grid no-padding>\\n                    <ion-row no-padding>\\n                        <ion-col col-2 no-padding text-center>\\n                            <div class=\"switch-button button-left currency-symbol\">\\n                                {{ depositObject.depositDetails.base }}\\n                            </div>\\n                        </ion-col>\\n\\n                        <ion-col col-8 no-padding>\\n                            <ion-input inputmode=\"number\" class=\"input-item text-white\" autocomplete=\"off\"\\n                                placeholder=\"{{ depositObject.depositDetails.amount }}\"\\n                                [(ngModel)]=\"depositObject.depositDetails.amount\">\\n                            </ion-input>\\n                        </ion-col>\\n                        <ion-col col-2 no-padding text-center (click)=\"toggleCryptoCurrency()\">\\n                            <button type=\"button\" class=\"switch-button button-right\">\\n                                <ion-icon name=\"md-swap\"></ion-icon>\\n                            </button>\\n                        </ion-col>\\n                    </ion-row>\\n                </ion-grid>\\n            </div>\\n            <span class=\"smallest left-15 center text-white\"\\n                *ngIf=\"depositObject.paymentMethod === \\'crypto\\' && depositObject.depositDetails.base == \\'ZAR\\'\">Specify\\n                amount in South African Rand</span>\\n            <span class=\"smallest left-15 center text-white\"\\n                *ngIf=\"depositObject.paymentMethod === \\'crypto\\' && depositObject.depositDetails.base != \\'ZAR\\'\">Specify\\n                amount in {{ cryptoIcons[selectedCryptoIndex].name }}</span>\\n\\n\\n\\n            <h3 class=\"exo2 section-heading\">Choose a payment method</h3>\\n\\n            <div>\\n                <ion-grid no-padding>\\n                    <ion-row no-padding>\\n                        <ion-col col-4 class=\"text-center\" padding>\\n                            <button class=\"button-icon-top\" color=\"secondary\" ion-button\\n                                (click)=\"updatePaymentMethod(0)\"\\n                                [ngClass]=\"depositObject.paymentMethod === \\'eft\\' ? \\'selected\\' : \\'unselected\\' \">\\n                                <ion-icon [ngClass]=\"depositObject.paymentMethod === \\'eft\\' ? \\'selected\\' : \\'unselected\\' \"\\n                                    name=\"md-cash\"></ion-icon>\\n                                <span [ngClass]=\"depositObject.paymentMethod === \\'eft\\' ? \\'selected\\' : \\'unselected\\' \"\\n                                    class=\"text-white\">EFT</span>\\n                            </button>\\n                        </ion-col>\\n                        <ion-col col-4 class=\"text-center\" padding>\\n                            <button class=\"button-icon-top\" color=\"secondary\" ion-button\\n                                (click)=\"updatePaymentMethod(1)\"\\n                                [ngClass]=\"depositObject.paymentMethod === \\'card\\' ? \\'selected\\' : \\'unselected\\' \">\\n                                <ion-icon\\n                                    [ngClass]=\"depositObject.paymentMethod === \\'card\\' ? \\'selected\\' : \\'unselected\\' \"\\n                                    name=\"ios-card\"></ion-icon>\\n                                <span [ngClass]=\"depositObject.paymentMethod === \\'card\\' ? \\'selected\\' : \\'unselected\\' \"\\n                                    class=\"text-white\">Card</span>\\n                            </button>\\n                        </ion-col>\\n                        <ion-col col-4 class=\"text-center\" padding>\\n                            <button class=\"button-icon-top\" color=\"secondary\" ion-button\\n                                (click)=\"updatePaymentMethod(2)\"\\n                                [ngClass]=\"depositObject.paymentMethod === \\'crypto\\' ? \\'selected\\' : \\'unselected\\' \">\\n                                <ion-icon\\n                                    [ngClass]=\"depositObject.paymentMethod === \\'crypto\\' ? \\'selected\\' : \\'unselected\\' \"\\n                                    name=\"logo-bitcoin\"></ion-icon>\\n                                <span [ngClass]=\"depositObject.paymentMethod === \\'crypto\\' ? \\'selected\\' : \\'unselected\\' \"\\n                                    class=\"text-white\">Crypto</span>\\n                            </button>\\n                        </ion-col>\\n                    </ion-row>\\n                </ion-grid>\\n            </div>\\n\\n            <h3 class=\"exo2 section-heading\" *ngIf=\"depositObject.paymentMethod === \\'crypto\\'\">Select your currency</h3>\\n\\n            <div *ngIf=\"depositObject.paymentMethod === \\'crypto\\'\">\\n                <ion-grid no-padding>\\n                    <ion-row no-padding>\\n\\n                        <ion-col padding col-4 class=\"text-center\" text-wrap (click)=\"setCryptoCurrency(\\'FRX\\', 0)\">\\n                            <img src=\"assets/icon/Fraxeum_White.png\" class=\"icon-images\"\\n                                *ngIf=\"depositObject.depositDetails.currency != \\'FRX\\'\" />\\n                            <img src=\"assets/icon/Fraxeum.png\" class=\"icon-images\"\\n                                *ngIf=\"depositObject.depositDetails.currency === \\'FRX\\'\" />\\n                            <ion-label class=\"text-white\"\\n                                [ngClass]=\"depositObject.depositDetails.currency === \\'FRX\\' ? \\'selectedCoinName\\':\\'\\'\">\\n                                Fraxeum\\n                            </ion-label>\\n                        </ion-col>\\n                        <ion-col padding col-4 class=\"text-center\" text-wrap (click)=\"setCryptoCurrency(\\'BTC\\', 1)\">\\n                            <img src=\"assets/icon/Bitcoin_White.png\" class=\"icon-images\"\\n                                *ngIf=\"depositObject.depositDetails.currency != \\'BTC\\'\" />\\n                            <img src=\"assets/icon/Bitcoin.png\" class=\"icon-images\"\\n                                *ngIf=\"depositObject.depositDetails.currency === \\'BTC\\'\" />\\n                            <ion-label class=\"text-white\"\\n                                [ngClass]=\"depositObject.depositDetails.currency === \\'BTC\\' ? \\'selectedCoinName\\':\\'\\'\">\\n                                Bitcoin\\n                            </ion-label>\\n                        </ion-col>\\n                        <ion-col padding col-4 class=\"text-center\" text-wrap (click)=\"setCryptoCurrency(\\'BSV\\', 2)\">\\n                            <img src=\"assets/icon/BitcoinSV_White.png\" class=\"icon-images\"\\n                                *ngIf=\"depositObject.depositDetails.currency != \\'BSV\\'\" />\\n                            <img src=\"assets/icon/BitcoinSV.png\" class=\"icon-images\"\\n                                *ngIf=\"depositObject.depositDetails.currency === \\'BSV\\'\" />\\n                            <ion-label class=\"text-white\"\\n                                [ngClass]=\"depositObject.depositDetails.currency === \\'BSV\\' ? \\'selectedCoinName\\':\\'\\'\">\\n                                Bitcoin SV\\n                            </ion-label>\\n                        </ion-col>\\n                    </ion-row>\\n                    <ion-row no-padding>\\n                        <ion-col col-4 class=\"text-center\" text-wrap (click)=\"setCryptoCurrency(\\'BCH\\', 3)\">\\n                            <img src=\"assets/icon/BitcoinCash_White.png\" class=\"icon-images\"\\n                                *ngIf=\"depositObject.depositDetails.currency != \\'BCH\\'\" />\\n                            <img src=\"assets/icon/BitcoinCash.png\" class=\"icon-images\"\\n                                *ngIf=\"depositObject.depositDetails.currency === \\'BCH\\'\" />\\n                            <ion-label class=\"text-white\"\\n                                [ngClass]=\"depositObject.depositDetails.currency === \\'BCH\\' ? \\'selectedCoinName\\':\\'\\'\">\\n                                Bitcoin Cash\\n                            </ion-label>\\n                        </ion-col>\\n                        <ion-col col-4 class=\"text-center\" text-wrap (click)=\"setCryptoCurrency(\\'ETH\\', 4)\">\\n                            <img src=\"assets/icon/Ethereum_White.png\" class=\"icon-images\"\\n                                *ngIf=\"depositObject.depositDetails.currency != \\'ETH\\'\" />\\n                            <img src=\"assets/icon/Ethereum.png\" class=\"icon-images\"\\n                                *ngIf=\"depositObject.depositDetails.currency === \\'ETH\\'\" />\\n                            <ion-label class=\"text-white\"\\n                                [ngClass]=\"depositObject.depositDetails.currency === \\'ETH\\' ? \\'selectedCoinName\\':\\'\\'\">\\n                                Ethereum\\n                            </ion-label>\\n                        </ion-col>\\n                        <ion-col col-4 class=\"text-center\" text-wrap (click)=\"setCryptoCurrency(\\'NEO\\', 5)\">\\n                            <img src=\"assets/icon/NEO_White.png\" class=\"icon-images\"\\n                                *ngIf=\"depositObject.depositDetails.currency != \\'NEO\\'\" />\\n                            <img src=\"assets/icon/NEO.png\" class=\"icon-images\"\\n                                *ngIf=\"depositObject.depositDetails.currency === \\'NEO\\'\" />\\n                            <ion-label class=\"text-white\"\\n                                [ngClass]=\"depositObject.depositDetails.currency === \\'NEO\\' ? \\'selectedCoinName\\':\\'\\'\">Neo\\n                            </ion-label>\\n                        </ion-col>\\n                    </ion-row>\\n                    <ion-row no-padding>\\n                        <ion-col col-4 class=\"text-center\" text-wrap (click)=\"setCryptoCurrency(\\'XMR\\', 6)\">\\n                            <img src=\"assets/icon/Monero_White.png\" class=\"icon-images\"\\n                                *ngIf=\"depositObject.depositDetails.currency != \\'XMR\\'\" />\\n                            <img src=\"assets/icon/Monero.png\" class=\"icon-images\"\\n                                *ngIf=\"depositObject.depositDetails.currency === \\'XMR\\'\" />\\n                            <ion-label class=\"text-white\"\\n                                [ngClass]=\"depositObject.depositDetails.currency === \\'XMR\\' ? \\'selectedCoinName\\':\\'\\'\">\\n                                Monero\\n                            </ion-label>\\n                        </ion-col>\\n                        <ion-col col-4 class=\"text-center\" text-wrap (click)=\"setCryptoCurrency(\\'LTC\\', 7)\">\\n                            <img src=\"assets/icon/Litecoin_White.png\" class=\"icon-images\"\\n                                *ngIf=\"depositObject.depositDetails.currency != \\'LTC\\'\" />\\n                            <img src=\"assets/icon/Litecoin.png\" class=\"icon-images\"\\n                                *ngIf=\"depositObject.depositDetails.currency === \\'LTC\\'\" />\\n                            <ion-label class=\"text-white\"\\n                                [ngClass]=\"depositObject.depositDetails.currency === \\'LTC\\' ? \\'selectedCoinName\\':\\'\\'\">\\n                                Litecoin\\n                            </ion-label>\\n                        </ion-col>\\n\\n                        <ion-col col-4 class=\"text-center\" text-wrap (click)=\"setCryptoCurrency(\\'ETC\\', 8)\">\\n                            <img src=\"assets/icon/EthereumClassic_White.png\" class=\"icon-images\"\\n                                *ngIf=\"depositObject.depositDetails.currency != \\'ETC\\'\" />\\n                            <img src=\"assets/icon/EthereumClassic.png\" class=\"icon-images\"\\n                                *ngIf=\"depositObject.depositDetails.currency === \\'ETC\\'\" />\\n                            <ion-label class=\"text-white\"\\n                                [ngClass]=\"depositObject.depositDetails.currency === \\'ETC\\' ? \\'selectedCoinName\\':\\'\\'\">\\n                                Ethereum\\n                                Classic\\n                            </ion-label>\\n                        </ion-col>\\n                    </ion-row>\\n                </ion-grid>\\n            </div>\\n        </div>\\n\\n\\n        <div *ngSwitchCase=\"\\'EFT_Final\\'\">\\n\\n            <div class=\"infoblock\">\\n                <p class=\"text-white\">\\n                    We\\'re all set. Please deposit the amount of R{{ depositDetails.amount }} into your AZUZA wallet\\n                    using {{ depositDetails.reference }} as the beneficiary reference.\\n                </p>\\n            </div>\\n\\n            <ion-item class=\"share-list-item\">\\n                <ion-grid>\\n                    <ion-row>\\n                        <ion-col>\\n                            <div class=\"shares-item-content-header\">\\n                                <h4 class=\"text-white\">\\n                                    {{ depositPageHeader }}\\n                                </h4>\\n                            </div>\\n                        </ion-col>\\n                    </ion-row>\\n                    <ion-row class=\"market-frame\" style=\"margin-bottom: 10px;\">\\n\\n                        <ion-col col-12 class=\"text-align-left border-bottom\">\\n\\n                            <!-- shows shares owned -->\\n                            <div>\\n                                <ion-grid no-padding>\\n                                    <ion-row class=\"border-bottom\">\\n                                        <ion-col class=\"padding-5 padding-bottom-10\" col-12>\\n                                            <div class=\"offer-label text-white left\">Reference number</div>\\n                                            <div class=\"larger margin-top-5 text-center text-white\">\\n                                                {{ depositDetails.reference }}\\n                                                <span class=\"darkblue small left-15\"\\n                                                    (click)=\"copyToClipboard(depositDetails.reference)\">\\n                                                    <ion-icon name=\"md-copy\"></ion-icon>\\n                                                </span>\\n                                            </div>\\n                                        </ion-col>\\n                                    </ion-row>\\n                                    <ion-row>\\n                                        <ion-col class=\"padding-5\" col-6 class=\"border-right\">\\n                                            <div class=\"offer-label text-white left\">Deposit amount</div>\\n                                            <div class=\"medium margin-top-5 text-center text-white\">\\n                                                {{ depositDetails.amount | currency : \\'ZAR\\': \\'R\\' }}</div>\\n                                        </ion-col>\\n                                        <ion-col class=\"padding-5\" col-6>\\n                                            <div class=\"offer-label text-white right\">Deposit fee</div>\\n                                            <div class=\"medium margin-top-5 text-center text-white\">\\n                                                {{ 0.00 | currency : \\'ZAR\\': \\'R\\' }}\\n                                            </div>\\n                                        </ion-col>\\n                                    </ion-row>\\n                                </ion-grid>\\n                            </div>\\n                        </ion-col>\\n                    </ion-row>\\n                </ion-grid>\\n            </ion-item>\\n\\n            <ion-item class=\"share-list-item\">\\n                <ion-grid>\\n                    <ion-row>\\n                        <ion-col>\\n                            <div class=\"shares-item-content-header\">\\n                                <h4 class=\"text-white\">\\n                                    Bank account information\\n                                </h4>\\n                            </div>\\n                        </ion-col>\\n                    </ion-row>\\n                    <ion-row class=\"market-frame\" style=\"margin-bottom: 10px;\" class=\"text-white\">\\n                        <ion-col col-5 class=\"text-white\">Bank name</ion-col>\\n                        <ion-col col-7>{{ eftResponse.BankName }}</ion-col>\\n                        <ion-col col-5>Account number</ion-col>\\n                        <ion-col col-7>{{ eftResponse.BankAccountNumber }}</ion-col>\\n                        <ion-col col-5>Branchcode</ion-col>\\n                        <ion-col col-7>{{ eftResponse.BankBranchCode }}</ion-col>\\n                    </ion-row>\\n                </ion-grid>\\n            </ion-item>\\n\\n            <ion-item class=\"share-list-item\">\\n                <ion-grid>\\n                    <ion-row>\\n                        <ion-col>\\n                            <div class=\"shares-item-content-header\">\\n                                <h4 class=\"text-white\">\\n                                    Important notes:\\n                                </h4>\\n                            </div>\\n                        </ion-col>\\n                    </ion-row>\\n                    <ion-row class=\"market-frame\" style=\"margin-bottom: 10px;\" class=\"text-white smaller text-wrap\">\\n                        <ion-col col-12>1. Deposits from {{ eftResponse.BankName }} will reflect the same day, usually\\n                            within the hour. </ion-col>\\n                        <ion-col col-12>2. This account accepts only EFT payments. No branch deposits will be accepted.\\n                        </ion-col>\\n                        <ion-col col-12>3. Ensure that you use the correct reference number.</ion-col>\\n                        <ion-col col-12>4. Depending on the bank you pay from, deposits may take up to two full business\\n                            days to process and reflect in your account.</ion-col>\\n                    </ion-row>\\n                </ion-grid>\\n            </ion-item>\\n        </div>\\n    </div>\\n\\n    <ion-fab right bottom>\\n        <button *ngIf=\"currentPage === \\'setup\\'\" ion-fab mini color=\"primary\" type=\"submit\" (click)=\"nextStep()\"\\n            [disabled]=\"!depositObject.depositDetails.currency || !depositObject.depositDetails.amount\">\\n            <ion-icon name=\"log-in\"></ion-icon>\\n        </button>\\n        <button *ngIf=\"currentPage === \\'EFT_Final\\'\" ion-fab mini color=\"primary\" type=\"submit\"\\n            (click)=\"emailBankingDetails()\">\\n            <ion-icon name=\"md-mail\"></ion-icon>\\n        </button>\\n\\n    </ion-fab>\\n\\n    <ion-fab left bottom>\\n        <button *ngIf=\"currentPage === \\'EFT_Final\\'\" ion-fab mini color=\"secondary\" type=\"submit\" (click)=\"goBack()\">\\n            <ion-icon name=\"undo\"></ion-icon>\\n        </button>\\n        <button *ngIf=\"currentPage === \\'setup\\'\" ion-fab mini color=\"secondary\" type=\"submit\" (click)=\"goHome()\">\\n            <ion-icon name=\"close\"></ion-icon>\\n        </button>\\n    </ion-fab>\\n\\n</ion-content>'/*ion-inline-end:\"/Users/llewellynmorkel/Desktop/AZUZAAPP/AZUZA_0.1.1/src/pages/deposit-money/deposit-money.html\"*/\n        }),\n        __metadata(\"design:paramtypes\", [__WEBPACK_IMPORTED_MODULE_2_ionic_angular__[\"u\" /* NavController */], __WEBPACK_IMPORTED_MODULE_2_ionic_angular__[\"v\" /* NavParams */], __WEBPACK_IMPORTED_MODULE_3__providers_user_user__[\"a\" /* UserProvider */], __WEBPACK_IMPORTED_MODULE_1__ionic_native_clipboard__[\"a\" /* Clipboard */]])\n    ], DepositMoneyPage);\n    return DepositMoneyPage;\n}());\n\n//# sourceMappingURL=deposit-money.js.map\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/deposit-money/deposit-money.ts\n// module id = 767\n// module chunks = 27\n\n//# sourceURL=/Users/llewellynmorkel/Desktop/AZUZAAPP/AZUZA_0.1.1/src/pages/deposit-money/deposit-money.ts");

/***/ })

});